"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/dashboard/route";
exports.ids = ["app/api/dashboard/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _workspaces_HealthCare_app_api_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/dashboard/route.ts */ \"(rsc)/./app/api/dashboard/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/dashboard/route\",\n        pathname: \"/api/dashboard\",\n        filename: \"route\",\n        bundlePath: \"app/api/dashboard/route\"\n    },\n    resolvedPagePath: \"/workspaces/HealthCare/app/api/dashboard/route.ts\",\n    nextConfigOutput,\n    userland: _workspaces_HealthCare_app_api_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/dashboard/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkYXNoYm9hcmQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmRhc2hib2FyZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmRhc2hib2FyZCUyRnJvdXRlLnRzJmFwcERpcj0lMkZ3b3Jrc3BhY2VzJTJGSGVhbHRoQ2FyZSUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGd29ya3NwYWNlcyUyRkhlYWx0aENhcmUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ0M7QUFDOUU7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLW1lZGljYWwtcmVjb3Jkcy8/Mzg5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvd29ya3NwYWNlcy9IZWFsdGhDYXJlL2FwcC9hcGkvZGFzaGJvYXJkL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9kYXNoYm9hcmQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kYXNoYm9hcmRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2Rhc2hib2FyZC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi93b3Jrc3BhY2VzL0hlYWx0aENhcmUvYXBwL2FwaS9kYXNoYm9hcmQvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2Rhc2hib2FyZC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/dashboard/route.ts":
/*!************************************!*\
  !*** ./app/api/dashboard/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_with_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/with-auth */ \"(rsc)/./lib/with-auth.ts\");\n/* harmony import */ var _lib_dashboard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/dashboard-service */ \"(rsc)/./lib/dashboard-service.ts\");\n/* harmony import */ var _lib_audit_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/audit-logger */ \"(rsc)/./lib/audit-logger.ts\");\n\n\n\n\n// GET - Dados do dashboard (usuários autenticados)\nconst GET = (0,_lib_with_auth__WEBPACK_IMPORTED_MODULE_1__.withAuth)(async (request, { user })=>{\n    const { searchParams } = new URL(request.url);\n    const section = searchParams.get(\"section\");\n    let data;\n    let actionDescription = \"\";\n    switch(section){\n        case \"stats\":\n            actionDescription = \"Estat\\xedsticas gerais do dashboard\";\n            data = await _lib_dashboard_service__WEBPACK_IMPORTED_MODULE_2__.DashboardService.getStats();\n            break;\n        case \"appointments\":\n            actionDescription = \"Consultas pr\\xf3ximas\";\n            data = await _lib_dashboard_service__WEBPACK_IMPORTED_MODULE_2__.DashboardService.getUpcomingAppointments();\n            break;\n        case \"patients\":\n            actionDescription = \"Pacientes recentes\";\n            data = await _lib_dashboard_service__WEBPACK_IMPORTED_MODULE_2__.DashboardService.getRecentPatients();\n            break;\n        case \"all\":\n        default:\n            actionDescription = \"Dashboard completo\";\n            const [allStats, allAppointments, allPatients] = await Promise.all([\n                _lib_dashboard_service__WEBPACK_IMPORTED_MODULE_2__.DashboardService.getStats(),\n                _lib_dashboard_service__WEBPACK_IMPORTED_MODULE_2__.DashboardService.getUpcomingAppointments(),\n                _lib_dashboard_service__WEBPACK_IMPORTED_MODULE_2__.DashboardService.getRecentPatients()\n            ]);\n            data = {\n                stats: allStats,\n                appointments: allAppointments,\n                patients: allPatients\n            };\n            break;\n    }\n    // Log de auditoria\n    _lib_audit_logger__WEBPACK_IMPORTED_MODULE_3__.auditLogger.logSuccess(user.id, user.email, user.role, _lib_audit_logger__WEBPACK_IMPORTED_MODULE_3__.AuditAction.DATA_EXPORT, \"dashboard\", {\n        section: section || \"all\",\n        actionDescription,\n        dataSize: JSON.stringify(data).length\n    });\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        success: true,\n        data,\n        metadata: {\n            section: section || \"all\",\n            retrievedAt: new Date().toISOString(),\n            retrievedBy: user.email,\n            userRole: user.role\n        }\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2Rhc2hib2FyZC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RDtBQUNiO0FBQ2dCO0FBQ0c7QUFFN0QsbURBQW1EO0FBQzVDLE1BQU1LLE1BQU1KLHdEQUFRQSxDQUFDLE9BQU9LLFNBQVMsRUFBRUMsSUFBSSxFQUFFO0lBQ2xELE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUcsSUFBSUMsSUFBSUgsUUFBUUksR0FBRztJQUM1QyxNQUFNQyxVQUFVSCxhQUFhSSxHQUFHLENBQUM7SUFFakMsSUFBSUM7SUFDSixJQUFJQyxvQkFBb0I7SUFFeEIsT0FBUUg7UUFDTixLQUFLO1lBQ0hHLG9CQUFvQjtZQUNwQkQsT0FBTyxNQUFNWCxvRUFBZ0JBLENBQUNhLFFBQVE7WUFDdEM7UUFFRixLQUFLO1lBQ0hELG9CQUFvQjtZQUNwQkQsT0FBTyxNQUFNWCxvRUFBZ0JBLENBQUNjLHVCQUF1QjtZQUNyRDtRQUVGLEtBQUs7WUFDSEYsb0JBQW9CO1lBQ3BCRCxPQUFPLE1BQU1YLG9FQUFnQkEsQ0FBQ2UsaUJBQWlCO1lBQy9DO1FBRUYsS0FBSztRQUNMO1lBQ0VILG9CQUFvQjtZQUNwQixNQUFNLENBQUNJLFVBQVVDLGlCQUFpQkMsWUFBWSxHQUFHLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztnQkFDakVwQixvRUFBZ0JBLENBQUNhLFFBQVE7Z0JBQ3pCYixvRUFBZ0JBLENBQUNjLHVCQUF1QjtnQkFDeENkLG9FQUFnQkEsQ0FBQ2UsaUJBQWlCO2FBQ25DO1lBRURKLE9BQU87Z0JBQ0xVLE9BQU9MO2dCQUNQTSxjQUFjTDtnQkFDZE0sVUFBVUw7WUFDWjtZQUNBO0lBQ0o7SUFFQSxtQkFBbUI7SUFDbkJqQiwwREFBV0EsQ0FBQ3VCLFVBQVUsQ0FDcEJuQixLQUFLb0IsRUFBRSxFQUNQcEIsS0FBS3FCLEtBQUssRUFDVnJCLEtBQUtzQixJQUFJLEVBQ1R6QiwwREFBV0EsQ0FBQzBCLFdBQVcsRUFDdkIsYUFDQTtRQUNFbkIsU0FBU0EsV0FBVztRQUNwQkc7UUFDQWlCLFVBQVVDLEtBQUtDLFNBQVMsQ0FBQ3BCLE1BQU1xQixNQUFNO0lBQ3ZDO0lBR0YsT0FBT2xDLHFEQUFZQSxDQUFDbUMsSUFBSSxDQUFDO1FBQ3ZCQyxTQUFTO1FBQ1R2QjtRQUNBd0IsVUFBVTtZQUNSMUIsU0FBU0EsV0FBVztZQUNwQjJCLGFBQWEsSUFBSUMsT0FBT0MsV0FBVztZQUNuQ0MsYUFBYWxDLEtBQUtxQixLQUFLO1lBQ3ZCYyxVQUFVbkMsS0FBS3NCLElBQUk7UUFDckI7SUFDRjtBQUNGLEdBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLW1lZGljYWwtcmVjb3Jkcy8uL2FwcC9hcGkvZGFzaGJvYXJkL3JvdXRlLnRzP2ViNDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgd2l0aEF1dGggfSBmcm9tICdAL2xpYi93aXRoLWF1dGgnXG5pbXBvcnQgeyBEYXNoYm9hcmRTZXJ2aWNlIH0gZnJvbSAnQC9saWIvZGFzaGJvYXJkLXNlcnZpY2UnXG5pbXBvcnQgeyBhdWRpdExvZ2dlciwgQXVkaXRBY3Rpb24gfSBmcm9tICdAL2xpYi9hdWRpdC1sb2dnZXInXG5cbi8vIEdFVCAtIERhZG9zIGRvIGRhc2hib2FyZCAodXN1w6FyaW9zIGF1dGVudGljYWRvcylcbmV4cG9ydCBjb25zdCBHRVQgPSB3aXRoQXV0aChhc3luYyAocmVxdWVzdCwgeyB1c2VyIH0pID0+IHtcbiAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpXG4gIGNvbnN0IHNlY3Rpb24gPSBzZWFyY2hQYXJhbXMuZ2V0KCdzZWN0aW9uJylcblxuICBsZXQgZGF0YTogYW55XG4gIGxldCBhY3Rpb25EZXNjcmlwdGlvbiA9ICcnXG5cbiAgc3dpdGNoIChzZWN0aW9uKSB7XG4gICAgY2FzZSAnc3RhdHMnOlxuICAgICAgYWN0aW9uRGVzY3JpcHRpb24gPSAnRXN0YXTDrXN0aWNhcyBnZXJhaXMgZG8gZGFzaGJvYXJkJ1xuICAgICAgZGF0YSA9IGF3YWl0IERhc2hib2FyZFNlcnZpY2UuZ2V0U3RhdHMoKVxuICAgICAgYnJlYWtcblxuICAgIGNhc2UgJ2FwcG9pbnRtZW50cyc6XG4gICAgICBhY3Rpb25EZXNjcmlwdGlvbiA9ICdDb25zdWx0YXMgcHLDs3hpbWFzJ1xuICAgICAgZGF0YSA9IGF3YWl0IERhc2hib2FyZFNlcnZpY2UuZ2V0VXBjb21pbmdBcHBvaW50bWVudHMoKVxuICAgICAgYnJlYWtcblxuICAgIGNhc2UgJ3BhdGllbnRzJzpcbiAgICAgIGFjdGlvbkRlc2NyaXB0aW9uID0gJ1BhY2llbnRlcyByZWNlbnRlcydcbiAgICAgIGRhdGEgPSBhd2FpdCBEYXNoYm9hcmRTZXJ2aWNlLmdldFJlY2VudFBhdGllbnRzKClcbiAgICAgIGJyZWFrXG5cbiAgICBjYXNlICdhbGwnOlxuICAgIGRlZmF1bHQ6XG4gICAgICBhY3Rpb25EZXNjcmlwdGlvbiA9ICdEYXNoYm9hcmQgY29tcGxldG8nXG4gICAgICBjb25zdCBbYWxsU3RhdHMsIGFsbEFwcG9pbnRtZW50cywgYWxsUGF0aWVudHNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBEYXNoYm9hcmRTZXJ2aWNlLmdldFN0YXRzKCksXG4gICAgICAgIERhc2hib2FyZFNlcnZpY2UuZ2V0VXBjb21pbmdBcHBvaW50bWVudHMoKSxcbiAgICAgICAgRGFzaGJvYXJkU2VydmljZS5nZXRSZWNlbnRQYXRpZW50cygpXG4gICAgICBdKVxuXG4gICAgICBkYXRhID0ge1xuICAgICAgICBzdGF0czogYWxsU3RhdHMsXG4gICAgICAgIGFwcG9pbnRtZW50czogYWxsQXBwb2ludG1lbnRzLFxuICAgICAgICBwYXRpZW50czogYWxsUGF0aWVudHNcbiAgICAgIH1cbiAgICAgIGJyZWFrXG4gIH1cblxuICAvLyBMb2cgZGUgYXVkaXRvcmlhXG4gIGF1ZGl0TG9nZ2VyLmxvZ1N1Y2Nlc3MoXG4gICAgdXNlci5pZCxcbiAgICB1c2VyLmVtYWlsLFxuICAgIHVzZXIucm9sZSxcbiAgICBBdWRpdEFjdGlvbi5EQVRBX0VYUE9SVCxcbiAgICAnZGFzaGJvYXJkJyxcbiAgICB7XG4gICAgICBzZWN0aW9uOiBzZWN0aW9uIHx8ICdhbGwnLFxuICAgICAgYWN0aW9uRGVzY3JpcHRpb24sXG4gICAgICBkYXRhU2l6ZTogSlNPTi5zdHJpbmdpZnkoZGF0YSkubGVuZ3RoXG4gICAgfVxuICApXG5cbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICBzdWNjZXNzOiB0cnVlLFxuICAgIGRhdGEsXG4gICAgbWV0YWRhdGE6IHtcbiAgICAgIHNlY3Rpb246IHNlY3Rpb24gfHwgJ2FsbCcsXG4gICAgICByZXRyaWV2ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgcmV0cmlldmVkQnk6IHVzZXIuZW1haWwsXG4gICAgICB1c2VyUm9sZTogdXNlci5yb2xlXG4gICAgfVxuICB9KVxufSlcbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJ3aXRoQXV0aCIsIkRhc2hib2FyZFNlcnZpY2UiLCJhdWRpdExvZ2dlciIsIkF1ZGl0QWN0aW9uIiwiR0VUIiwicmVxdWVzdCIsInVzZXIiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJzZWN0aW9uIiwiZ2V0IiwiZGF0YSIsImFjdGlvbkRlc2NyaXB0aW9uIiwiZ2V0U3RhdHMiLCJnZXRVcGNvbWluZ0FwcG9pbnRtZW50cyIsImdldFJlY2VudFBhdGllbnRzIiwiYWxsU3RhdHMiLCJhbGxBcHBvaW50bWVudHMiLCJhbGxQYXRpZW50cyIsIlByb21pc2UiLCJhbGwiLCJzdGF0cyIsImFwcG9pbnRtZW50cyIsInBhdGllbnRzIiwibG9nU3VjY2VzcyIsImlkIiwiZW1haWwiLCJyb2xlIiwiREFUQV9FWFBPUlQiLCJkYXRhU2l6ZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJsZW5ndGgiLCJqc29uIiwic3VjY2VzcyIsIm1ldGFkYXRhIiwicmV0cmlldmVkQXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJyZXRyaWV2ZWRCeSIsInVzZXJSb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/dashboard/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/audit-logger.ts":
/*!*****************************!*\
  !*** ./lib/audit-logger.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuditAction: () => (/* binding */ AuditAction),\n/* harmony export */   auditLogger: () => (/* binding */ auditLogger),\n/* harmony export */   getRequestInfo: () => (/* binding */ getRequestInfo)\n/* harmony export */ });\n/**\n * Sistema de Logs de Auditoria para HealthCare\n * Registra ações críticas no sistema para compliance e segurança\n */ var AuditAction;\n(function(AuditAction) {\n    // Autenticação\n    AuditAction[\"LOGIN\"] = \"LOGIN\";\n    AuditAction[\"LOGOUT\"] = \"LOGOUT\";\n    AuditAction[\"LOGIN_FAILED\"] = \"LOGIN_FAILED\";\n    // Pacientes\n    AuditAction[\"PATIENT_CREATE\"] = \"PATIENT_CREATE\";\n    AuditAction[\"PATIENT_READ\"] = \"PATIENT_READ\";\n    AuditAction[\"PATIENT_UPDATE\"] = \"PATIENT_UPDATE\";\n    AuditAction[\"PATIENT_DELETE\"] = \"PATIENT_DELETE\";\n    // Consultas\n    AuditAction[\"CONSULTATION_CREATE\"] = \"CONSULTATION_CREATE\";\n    AuditAction[\"CONSULTATION_READ\"] = \"CONSULTATION_READ\";\n    AuditAction[\"CONSULTATION_UPDATE\"] = \"CONSULTATION_UPDATE\";\n    AuditAction[\"CONSULTATION_DELETE\"] = \"CONSULTATION_DELETE\";\n    // Notificações\n    AuditAction[\"NOTIFICATION_CREATE\"] = \"NOTIFICATION_CREATE\";\n    AuditAction[\"NOTIFICATION_READ\"] = \"NOTIFICATION_READ\";\n    AuditAction[\"NOTIFICATION_UPDATE\"] = \"NOTIFICATION_UPDATE\";\n    AuditAction[\"NOTIFICATION_DELETE\"] = \"NOTIFICATION_DELETE\";\n    // Prescrições\n    AuditAction[\"PRESCRIPTION_CREATE\"] = \"PRESCRIPTION_CREATE\";\n    AuditAction[\"PRESCRIPTION_READ\"] = \"PRESCRIPTION_READ\";\n    AuditAction[\"PRESCRIPTION_UPDATE\"] = \"PRESCRIPTION_UPDATE\";\n    // Registros Médicos\n    AuditAction[\"MEDICAL_RECORD_CREATE\"] = \"MEDICAL_RECORD_CREATE\";\n    AuditAction[\"MEDICAL_RECORD_READ\"] = \"MEDICAL_RECORD_READ\";\n    AuditAction[\"MEDICAL_RECORD_UPDATE\"] = \"MEDICAL_RECORD_UPDATE\";\n    // IA\n    AuditAction[\"AI_INTERACTION\"] = \"AI_INTERACTION\";\n    AuditAction[\"AI_ANALYSIS\"] = \"AI_ANALYSIS\";\n    // Sistema\n    AuditAction[\"SYSTEM_CONFIG_CHANGE\"] = \"SYSTEM_CONFIG_CHANGE\";\n    AuditAction[\"DATA_EXPORT\"] = \"DATA_EXPORT\";\n    AuditAction[\"DATA_IMPORT\"] = \"DATA_IMPORT\";\n    // Segurança e Anomalias\n    AuditAction[\"RATE_LIMIT_EXCEEDED\"] = \"RATE_LIMIT_EXCEEDED\";\n    AuditAction[\"CRITICAL_ANOMALY_DETECTED\"] = \"CRITICAL_ANOMALY_DETECTED\";\n    AuditAction[\"ANOMALY_DETECTED\"] = \"ANOMALY_DETECTED\";\n    AuditAction[\"API_ERROR\"] = \"API_ERROR\";\n    AuditAction[\"SECURITY_INCIDENT\"] = \"SECURITY_INCIDENT\";\n})(AuditAction || (AuditAction = {}));\nclass AuditLogger {\n    constructor(){\n        this.logs = [];\n    }\n    static getInstance() {\n        if (!AuditLogger.instance) {\n            AuditLogger.instance = new AuditLogger();\n        }\n        return AuditLogger.instance;\n    }\n    /**\n   * Registra uma ação de auditoria\n   */ log(userId, userEmail, userRole, action, resource, options = {}) {\n        const auditLog = {\n            userId,\n            userEmail,\n            userRole,\n            action,\n            resource,\n            resourceId: options.resourceId,\n            details: options.details,\n            ipAddress: options.ipAddress,\n            userAgent: options.userAgent,\n            timestamp: new Date(),\n            success: options.success ?? true,\n            errorMessage: options.errorMessage\n        };\n        // Em desenvolvimento, apenas log no console\n        if (true) {\n            console.log(\"\\uD83D\\uDD0D AUDIT LOG:\", {\n                user: `${userEmail} (${userRole})`,\n                action: action,\n                resource: resource,\n                success: auditLog.success,\n                timestamp: auditLog.timestamp.toISOString()\n            });\n        }\n        // TODO: Em produção, salvar no banco de dados\n        // TODO: Implementar rotação de logs\n        // TODO: Enviar logs críticos para sistema de monitoramento\n        this.logs.push(auditLog);\n        // Manter apenas os últimos 1000 logs em memória\n        if (this.logs.length > 1000) {\n            this.logs = this.logs.slice(-1000);\n        }\n    }\n    /**\n   * Log de sucesso\n   */ logSuccess(userId, userEmail, userRole, action, resource, details) {\n        this.log(userId, userEmail, userRole, action, resource, {\n            details,\n            success: true\n        });\n    }\n    /**\n   * Log de erro/falha\n   */ logError(userId, userEmail, userRole, action, resource, errorMessage, details) {\n        this.log(userId, userEmail, userRole, action, resource, {\n            details,\n            success: false,\n            errorMessage\n        });\n    }\n    /**\n   * Obter logs recentes (para debug)\n   */ getRecentLogs(limit = 50) {\n        return this.logs.sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime()).slice(0, limit);\n    }\n    /**\n   * Filtrar logs por usuário\n   */ getLogsByUser(userId, limit = 50) {\n        return this.logs.filter((log)=>log.userId === userId).sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime()).slice(0, limit);\n    }\n    /**\n   * Filtrar logs por ação\n   */ getLogsByAction(action, limit = 50) {\n        return this.logs.filter((log)=>log.action === action).sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime()).slice(0, limit);\n    }\n}\n// Export singleton instance\nconst auditLogger = AuditLogger.getInstance();\n/**\n * Helper para extrair informações da requisição\n */ function getRequestInfo(request) {\n    const forwarded = request.headers.get(\"x-forwarded-for\");\n    const realIP = request.headers.get(\"x-real-ip\");\n    return {\n        ipAddress: forwarded?.split(\",\")[0] || realIP || \"unknown\",\n        userAgent: request.headers.get(\"user-agent\") || \"unknown\"\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/audit-logger.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-middleware.ts":
/*!********************************!*\
  !*** ./lib/auth-middleware.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authMiddleware: () => (/* binding */ authMiddleware),\n/* harmony export */   createAuthError: () => (/* binding */ createAuthError),\n/* harmony export */   hasPermission: () => (/* binding */ hasPermission)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/jwt */ \"(rsc)/./node_modules/next-auth/jwt/index.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Middleware para verificar autenticação em rotas API\n * Extrai e valida o token JWT do NextAuth\n */ async function authMiddleware(request, options = {}) {\n    try {\n        // Obter token do NextAuth\n        const token = await (0,next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__.getToken)({\n            req: request,\n            secret: \"healthcare-secret-key-change-in-production-2024\"\n        });\n        if (!token) {\n            return {\n                success: false,\n                error: \"Token de autentica\\xe7\\xe3o n\\xe3o encontrado\",\n                response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"N\\xe3o autorizado - Token n\\xe3o encontrado\"\n                }, {\n                    status: 401\n                })\n            };\n        }\n        // Verificar se o usuário está ativo (se necessário, consultar BD)\n        if (!token.id || !token.email) {\n            return {\n                success: false,\n                error: \"Token inv\\xe1lido - dados do usu\\xe1rio ausentes\",\n                response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Token inv\\xe1lido\"\n                }, {\n                    status: 401\n                })\n            };\n        }\n        // Verificar role se especificado\n        if (options.requireRole && options.requireRole.length > 0) {\n            if (!token.role || !options.requireRole.includes(token.role)) {\n                return {\n                    success: false,\n                    error: `Acesso negado - Role necessária: ${options.requireRole.join(\" ou \")}`,\n                    response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Acesso negado - Permiss\\xf5es insuficientes\"\n                    }, {\n                        status: 403\n                    })\n                };\n            }\n        }\n        // Estruturar dados do usuário\n        const user = {\n            id: token.id,\n            email: token.email,\n            name: token.name,\n            role: token.role,\n            speciality: token.speciality,\n            crmNumber: token.crmNumber\n        };\n        // Log de auditoria (opcional em desenvolvimento)\n        if (true) {\n            console.log(`🔐 Acesso autorizado: ${user.email} (${user.role}) - ${request.method} ${request.url}`);\n        }\n        return {\n            success: true,\n            user\n        };\n    } catch (error) {\n        console.error(\"Erro no middleware de autentica\\xe7\\xe3o:\", error);\n        return {\n            success: false,\n            error: \"Erro interno de autentica\\xe7\\xe3o\",\n            response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Erro interno do servidor\"\n            }, {\n                status: 500\n            })\n        };\n    }\n}\n/**\n * Helper para verificar permissões específicas\n */ function hasPermission(userRole, requiredRoles) {\n    return requiredRoles.includes(userRole);\n}\n/**\n * Helper para criar resposta de erro padrão\n */ function createAuthError(message, status = 401) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: message,\n        timestamp: new Date().toISOString(),\n        success: false\n    }, {\n        status\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YWwtcmVjb3Jkcy8uL2xpYi9hdXRoLW1pZGRsZXdhcmUudHM/OGUyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ25leHQtYXV0aC9qd3QnXG5cbmV4cG9ydCBpbnRlcmZhY2UgQXV0aGVudGljYXRlZFJlcXVlc3QgZXh0ZW5kcyBOZXh0UmVxdWVzdCB7XG4gIHVzZXI6IHtcbiAgICBpZDogc3RyaW5nXG4gICAgZW1haWw6IHN0cmluZ1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIHJvbGU6IHN0cmluZ1xuICAgIHNwZWNpYWxpdHk/OiBzdHJpbmdcbiAgICBjcm1OdW1iZXI/OiBzdHJpbmdcbiAgfVxufVxuXG4vKipcbiAqIE1pZGRsZXdhcmUgcGFyYSB2ZXJpZmljYXIgYXV0ZW50aWNhw6fDo28gZW0gcm90YXMgQVBJXG4gKiBFeHRyYWkgZSB2YWxpZGEgbyB0b2tlbiBKV1QgZG8gTmV4dEF1dGhcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dGhNaWRkbGV3YXJlKFxuICByZXF1ZXN0OiBOZXh0UmVxdWVzdCxcbiAgb3B0aW9uczogeyByZXF1aXJlUm9sZT86IHN0cmluZ1tdIH0gPSB7fVxuKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IHVzZXI/OiBhbnk7IGVycm9yPzogc3RyaW5nOyByZXNwb25zZT86IE5leHRSZXNwb25zZSB9PiB7XG4gIHRyeSB7XG4gICAgLy8gT2J0ZXIgdG9rZW4gZG8gTmV4dEF1dGhcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGdldFRva2VuKHsgXG4gICAgICByZXE6IHJlcXVlc3QsXG4gICAgICBzZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCBcbiAgICB9KVxuXG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiAnVG9rZW4gZGUgYXV0ZW50aWNhw6fDo28gbsOjbyBlbmNvbnRyYWRvJyxcbiAgICAgICAgcmVzcG9uc2U6IE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgIHsgZXJyb3I6ICdOw6NvIGF1dG9yaXphZG8gLSBUb2tlbiBuw6NvIGVuY29udHJhZG8nIH0sXG4gICAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgc2UgbyB1c3XDoXJpbyBlc3TDoSBhdGl2byAoc2UgbmVjZXNzw6FyaW8sIGNvbnN1bHRhciBCRClcbiAgICBpZiAoIXRva2VuLmlkIHx8ICF0b2tlbi5lbWFpbCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiAnVG9rZW4gaW52w6FsaWRvIC0gZGFkb3MgZG8gdXN1w6FyaW8gYXVzZW50ZXMnLFxuICAgICAgICByZXNwb25zZTogTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgeyBlcnJvcjogJ1Rva2VuIGludsOhbGlkbycgfSxcbiAgICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciByb2xlIHNlIGVzcGVjaWZpY2Fkb1xuICAgIGlmIChvcHRpb25zLnJlcXVpcmVSb2xlICYmIG9wdGlvbnMucmVxdWlyZVJvbGUubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKCF0b2tlbi5yb2xlIHx8ICFvcHRpb25zLnJlcXVpcmVSb2xlLmluY2x1ZGVzKHRva2VuLnJvbGUgYXMgc3RyaW5nKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiBgQWNlc3NvIG5lZ2FkbyAtIFJvbGUgbmVjZXNzw6FyaWE6ICR7b3B0aW9ucy5yZXF1aXJlUm9sZS5qb2luKCcgb3UgJyl9YCxcbiAgICAgICAgICByZXNwb25zZTogTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICB7IGVycm9yOiAnQWNlc3NvIG5lZ2FkbyAtIFBlcm1pc3PDtWVzIGluc3VmaWNpZW50ZXMnIH0sXG4gICAgICAgICAgICB7IHN0YXR1czogNDAzIH1cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFc3RydXR1cmFyIGRhZG9zIGRvIHVzdcOhcmlvXG4gICAgY29uc3QgdXNlciA9IHtcbiAgICAgIGlkOiB0b2tlbi5pZCBhcyBzdHJpbmcsXG4gICAgICBlbWFpbDogdG9rZW4uZW1haWwgYXMgc3RyaW5nLFxuICAgICAgbmFtZTogdG9rZW4ubmFtZSBhcyBzdHJpbmcsXG4gICAgICByb2xlOiB0b2tlbi5yb2xlIGFzIHN0cmluZyxcbiAgICAgIHNwZWNpYWxpdHk6IHRva2VuLnNwZWNpYWxpdHkgYXMgc3RyaW5nIHwgdW5kZWZpbmVkLFxuICAgICAgY3JtTnVtYmVyOiB0b2tlbi5jcm1OdW1iZXIgYXMgc3RyaW5nIHwgdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgLy8gTG9nIGRlIGF1ZGl0b3JpYSAob3BjaW9uYWwgZW0gZGVzZW52b2x2aW1lbnRvKVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgY29uc29sZS5sb2coYPCflJAgQWNlc3NvIGF1dG9yaXphZG86ICR7dXNlci5lbWFpbH0gKCR7dXNlci5yb2xlfSkgLSAke3JlcXVlc3QubWV0aG9kfSAke3JlcXVlc3QudXJsfWApXG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICB1c2VyXG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJybyBubyBtaWRkbGV3YXJlIGRlIGF1dGVudGljYcOnw6NvOicsIGVycm9yKVxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnRXJybyBpbnRlcm5vIGRlIGF1dGVudGljYcOnw6NvJyxcbiAgICAgIHJlc3BvbnNlOiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ0Vycm8gaW50ZXJubyBkbyBzZXJ2aWRvcicgfSxcbiAgICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgICApXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogSGVscGVyIHBhcmEgdmVyaWZpY2FyIHBlcm1pc3PDtWVzIGVzcGVjw61maWNhc1xuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzUGVybWlzc2lvbih1c2VyUm9sZTogc3RyaW5nLCByZXF1aXJlZFJvbGVzOiBzdHJpbmdbXSk6IGJvb2xlYW4ge1xuICByZXR1cm4gcmVxdWlyZWRSb2xlcy5pbmNsdWRlcyh1c2VyUm9sZSlcbn1cblxuLyoqXG4gKiBIZWxwZXIgcGFyYSBjcmlhciByZXNwb3N0YSBkZSBlcnJvIHBhZHLDo29cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUF1dGhFcnJvcihtZXNzYWdlOiBzdHJpbmcsIHN0YXR1czogbnVtYmVyID0gNDAxKTogTmV4dFJlc3BvbnNlIHtcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgIHsgXG4gICAgICBlcnJvcjogbWVzc2FnZSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgc3VjY2VzczogZmFsc2VcbiAgICB9LFxuICAgIHsgc3RhdHVzIH1cbiAgKVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImdldFRva2VuIiwiYXV0aE1pZGRsZXdhcmUiLCJyZXF1ZXN0Iiwib3B0aW9ucyIsInRva2VuIiwicmVxIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIk5FWFRBVVRIX1NFQ1JFVCIsInN1Y2Nlc3MiLCJlcnJvciIsInJlc3BvbnNlIiwianNvbiIsInN0YXR1cyIsImlkIiwiZW1haWwiLCJyZXF1aXJlUm9sZSIsImxlbmd0aCIsInJvbGUiLCJpbmNsdWRlcyIsImpvaW4iLCJ1c2VyIiwibmFtZSIsInNwZWNpYWxpdHkiLCJjcm1OdW1iZXIiLCJjb25zb2xlIiwibG9nIiwibWV0aG9kIiwidXJsIiwiaGFzUGVybWlzc2lvbiIsInVzZXJSb2xlIiwicmVxdWlyZWRSb2xlcyIsImNyZWF0ZUF1dGhFcnJvciIsIm1lc3NhZ2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-middleware.ts\n");

/***/ }),

/***/ "(rsc)/./lib/dashboard-service.ts":
/*!**********************************!*\
  !*** ./lib/dashboard-service.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DashboardService: () => (/* binding */ DashboardService)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nclass DashboardService {\n    // Buscar estatísticas principais do dashboard\n    static async getStats() {\n        try {\n            // Total de pacientes\n            const totalPatients = await prisma.patient.count();\n            // Consultas hoje\n            const today = new Date();\n            const startOfDay = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n            const endOfDay = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\n            const consultationsToday = await prisma.consultation.count({\n                where: {\n                    scheduledDate: {\n                        gte: startOfDay,\n                        lt: endOfDay\n                    }\n                }\n            });\n            // Prontuários atualizados (último mês)\n            const lastMonth = new Date();\n            lastMonth.setMonth(lastMonth.getMonth() - 1);\n            const updatedRecords = await prisma.medicalRecord.count({\n                where: {\n                    updatedAt: {\n                        gte: lastMonth\n                    }\n                }\n            });\n            // Taxa de conclusão de consultas (último mês)\n            const totalConsultationsLastMonth = await prisma.consultation.count({\n                where: {\n                    scheduledDate: {\n                        gte: lastMonth\n                    }\n                }\n            });\n            const completedConsultationsLastMonth = await prisma.consultation.count({\n                where: {\n                    scheduledDate: {\n                        gte: lastMonth\n                    },\n                    status: \"COMPLETED\"\n                }\n            });\n            const completionRate = totalConsultationsLastMonth > 0 ? Math.round(completedConsultationsLastMonth / totalConsultationsLastMonth * 100) : 0;\n            return {\n                totalPatients,\n                consultationsToday,\n                updatedRecords,\n                completionRate\n            };\n        } catch (error) {\n            console.error(\"Erro ao buscar estat\\xedsticas:\", error);\n            throw error;\n        }\n    }\n    // Buscar próximas consultas\n    static async getUpcomingAppointments(limit = 3) {\n        try {\n            const appointments = await prisma.consultation.findMany({\n                where: {\n                    scheduledDate: {\n                        gte: new Date()\n                    },\n                    status: {\n                        in: [\n                            \"SCHEDULED\",\n                            \"IN_PROGRESS\"\n                        ]\n                    }\n                },\n                include: {\n                    patient: {\n                        select: {\n                            name: true\n                        }\n                    }\n                },\n                orderBy: {\n                    scheduledDate: \"asc\"\n                },\n                take: limit\n            });\n            return appointments.map((appointment)=>({\n                    id: appointment.id,\n                    patient: appointment.patient.name,\n                    time: appointment.scheduledDate.toLocaleTimeString(\"pt-BR\", {\n                        hour: \"2-digit\",\n                        minute: \"2-digit\"\n                    }),\n                    type: this.getConsultationTypeLabel(appointment.type),\n                    duration: appointment.duration ? `${appointment.duration} min` : \"30 min\"\n                }));\n        } catch (error) {\n            console.error(\"Erro ao buscar pr\\xf3ximas consultas:\", error);\n            throw error;\n        }\n    }\n    // Buscar pacientes recentes\n    static async getRecentPatients(limit = 3) {\n        try {\n            const patients = await prisma.patient.findMany({\n                include: {\n                    consultations: {\n                        select: {\n                            scheduledDate: true,\n                            status: true\n                        },\n                        orderBy: {\n                            scheduledDate: \"desc\"\n                        },\n                        take: 1\n                    }\n                },\n                orderBy: {\n                    updatedAt: \"desc\"\n                },\n                take: limit\n            });\n            return patients.map((patient)=>{\n                const lastConsultation = patient.consultations[0];\n                const age = this.calculateAge(patient.birthDate);\n                return {\n                    id: patient.id,\n                    name: patient.name,\n                    age,\n                    lastVisit: lastConsultation ? lastConsultation.scheduledDate.toLocaleDateString(\"pt-BR\") : \"Nunca\",\n                    status: this.getPatientStatus(patient, lastConsultation),\n                    priority: this.getPatientPriority(patient)\n                };\n            });\n        } catch (error) {\n            console.error(\"Erro ao buscar pacientes recentes:\", error);\n            throw error;\n        }\n    }\n    // Métodos auxiliares\n    static calculateAge(birthDate) {\n        const today = new Date();\n        const birth = new Date(birthDate);\n        let age = today.getFullYear() - birth.getFullYear();\n        const monthDiff = today.getMonth() - birth.getMonth();\n        if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birth.getDate()) {\n            age--;\n        }\n        return age;\n    }\n    static getConsultationTypeLabel(type) {\n        const typeLabels = {\n            \"INITIAL\": \"Consulta inicial\",\n            \"FOLLOW_UP\": \"Retorno\",\n            \"EMERGENCY\": \"Emerg\\xeancia\",\n            \"ROUTINE\": \"Consulta de rotina\",\n            \"SPECIALIST\": \"Especialista\"\n        };\n        return typeLabels[type] || type;\n    }\n    static getPatientStatus(patient, lastConsultation) {\n        if (!lastConsultation) return \"Novo paciente\";\n        switch(lastConsultation.status){\n            case \"SCHEDULED\":\n                return \"Consulta agendada\";\n            case \"IN_PROGRESS\":\n                return \"Em atendimento\";\n            case \"COMPLETED\":\n                return \"\\xdaltima consulta conclu\\xedda\";\n            case \"CANCELLED\":\n                return \"\\xdaltima consulta cancelada\";\n            case \"NO_SHOW\":\n                return \"Faltou na \\xfaltima consulta\";\n            default:\n                return \"Em acompanhamento\";\n        }\n    }\n    static getPatientPriority(patient) {\n        // Lógica para determinar prioridade baseada em condições crônicas\n        const criticalConditions = [\n            \"diabetes\",\n            \"hipertens\\xe3o\",\n            \"cardiopatia\"\n        ];\n        const hasHighPriorityCondition = patient.chronicDiseases?.some((disease)=>criticalConditions.some((condition)=>disease.toLowerCase().includes(condition.toLowerCase())));\n        return hasHighPriorityCondition ? \"high\" : \"normal\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/dashboard-service.ts\n");

/***/ }),

/***/ "(rsc)/./lib/with-auth.ts":
/*!**************************!*\
  !*** ./lib/with-auth.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateRequestBody: () => (/* binding */ validateRequestBody),\n/* harmony export */   withAdminAuth: () => (/* binding */ withAdminAuth),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withDoctorAuth: () => (/* binding */ withDoctorAuth)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _auth_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth-middleware */ \"(rsc)/./lib/auth-middleware.ts\");\n\n\n/**\n * Higher-Order Function para proteger rotas API com autenticação\n * \n * @param handler - Função handler da rota API\n * @param options - Opções de autenticação (roles necessárias)\n * @returns Função handler protegida\n * \n * @example\n * ```typescript\n * export const GET = withAuth(async (request, { user }) => {\n *   // user já está autenticado e validado\n *   return NextResponse.json({ message: `Olá ${user.name}` })\n * })\n * \n * export const POST = withAuth(async (request, { user, params }) => {\n *   // Apenas médicos podem acessar\n *   const data = await request.json()\n *   // ... lógica da API\n * }, { requireRole: ['DOCTOR', 'ADMIN'] })\n * ```\n */ function withAuth(handler, options = {}) {\n    return async (request, context = {})=>{\n        try {\n            // Executar middleware de autenticação\n            const authResult = await (0,_auth_middleware__WEBPACK_IMPORTED_MODULE_1__.authMiddleware)(request, options);\n            // Se falhou na autenticação, retornar erro\n            if (!authResult.success) {\n                return authResult.response;\n            }\n            // Chamar handler original com usuário autenticado\n            return await handler(request, {\n                params: context.params || {},\n                user: authResult.user\n            });\n        } catch (error) {\n            console.error(\"Erro no wrapper withAuth:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Erro interno do servidor\",\n                timestamp: new Date().toISOString(),\n                success: false\n            }, {\n                status: 500\n            });\n        }\n    };\n}\n/**\n * Variação do withAuth apenas para médicos\n */ function withDoctorAuth(handler) {\n    return withAuth(handler, {\n        requireRole: [\n            \"DOCTOR\",\n            \"ADMIN\"\n        ]\n    });\n}\n/**\n * Variação do withAuth apenas para administradores\n */ function withAdminAuth(handler) {\n    return withAuth(handler, {\n        requireRole: [\n            \"ADMIN\"\n        ]\n    });\n}\n/**\n * Helper para validar dados de entrada da API\n */ async function validateRequestBody(request, validator) {\n    try {\n        const body = await request.json();\n        const validation = validator(body);\n        if (!validation.success) {\n            return {\n                success: false,\n                errors: validation.errors,\n                response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Dados inv\\xe1lidos\",\n                    details: validation.errors,\n                    success: false\n                }, {\n                    status: 400\n                })\n            };\n        }\n        return {\n            success: true,\n            data: validation.data\n        };\n    } catch (error) {\n        return {\n            success: false,\n            errors: [\n                \"Formato JSON inv\\xe1lido\"\n            ],\n            response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Formato JSON inv\\xe1lido\"\n            }, {\n                status: 400\n            })\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvd2l0aC1hdXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUNMO0FBZ0JsRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQkMsR0FDTSxTQUFTRSxTQUNkQyxPQUFnQyxFQUNoQ0MsVUFBc0MsQ0FBQyxDQUFDO0lBRXhDLE9BQU8sT0FBT0MsU0FBc0JDLFVBQTRCLENBQUMsQ0FBQztRQUNoRSxJQUFJO1lBQ0Ysc0NBQXNDO1lBQ3RDLE1BQU1DLGFBQWEsTUFBTU4sZ0VBQWNBLENBQUNJLFNBQVNEO1lBRWpELDJDQUEyQztZQUMzQyxJQUFJLENBQUNHLFdBQVdDLE9BQU8sRUFBRTtnQkFDdkIsT0FBT0QsV0FBV0UsUUFBUTtZQUM1QjtZQUVBLGtEQUFrRDtZQUNsRCxPQUFPLE1BQU1OLFFBQVFFLFNBQVM7Z0JBQzVCSyxRQUFRSixRQUFRSSxNQUFNLElBQUksQ0FBQztnQkFDM0JDLE1BQU1KLFdBQVdJLElBQUk7WUFDdkI7UUFFRixFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDZCQUE2QkE7WUFDM0MsT0FBT1oscURBQVlBLENBQUNjLElBQUksQ0FDdEI7Z0JBQ0VGLE9BQU87Z0JBQ1BHLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztnQkFDakNULFNBQVM7WUFDWCxHQUNBO2dCQUFFVSxRQUFRO1lBQUk7UUFFbEI7SUFDRjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTQyxlQUFlaEIsT0FBZ0M7SUFDN0QsT0FBT0QsU0FBU0MsU0FBUztRQUFFaUIsYUFBYTtZQUFDO1lBQVU7U0FBUTtJQUFDO0FBQzlEO0FBRUE7O0NBRUMsR0FDTSxTQUFTQyxjQUFjbEIsT0FBZ0M7SUFDNUQsT0FBT0QsU0FBU0MsU0FBUztRQUFFaUIsYUFBYTtZQUFDO1NBQVE7SUFBQztBQUNwRDtBQUVBOztDQUVDLEdBQ00sZUFBZUUsb0JBQ3BCakIsT0FBb0IsRUFDcEJrQixTQUEyRTtJQUUzRSxJQUFJO1FBQ0YsTUFBTUMsT0FBTyxNQUFNbkIsUUFBUVMsSUFBSTtRQUMvQixNQUFNVyxhQUFhRixVQUFVQztRQUU3QixJQUFJLENBQUNDLFdBQVdqQixPQUFPLEVBQUU7WUFDdkIsT0FBTztnQkFDTEEsU0FBUztnQkFDVGtCLFFBQVFELFdBQVdDLE1BQU07Z0JBQ3pCakIsVUFBVVQscURBQVlBLENBQUNjLElBQUksQ0FDekI7b0JBQ0VGLE9BQU87b0JBQ1BlLFNBQVNGLFdBQVdDLE1BQU07b0JBQzFCbEIsU0FBUztnQkFDWCxHQUNBO29CQUFFVSxRQUFRO2dCQUFJO1lBRWxCO1FBQ0Y7UUFFQSxPQUFPO1lBQ0xWLFNBQVM7WUFDVG9CLE1BQU1ILFdBQVdHLElBQUk7UUFDdkI7SUFFRixFQUFFLE9BQU9oQixPQUFPO1FBQ2QsT0FBTztZQUNMSixTQUFTO1lBQ1RrQixRQUFRO2dCQUFDO2FBQXdCO1lBQ2pDakIsVUFBVVQscURBQVlBLENBQUNjLElBQUksQ0FDekI7Z0JBQUVGLE9BQU87WUFBd0IsR0FDakM7Z0JBQUVNLFFBQVE7WUFBSTtRQUVsQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLW1lZGljYWwtcmVjb3Jkcy8uL2xpYi93aXRoLWF1dGgudHM/MWViNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gJy4vYXV0aC1taWRkbGV3YXJlJ1xuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhlbnRpY2F0ZWRBcGlIYW5kbGVyIHtcbiAgKHJlcXVlc3Q6IE5leHRSZXF1ZXN0LCBjb250ZXh0OiB7IFxuICAgIHBhcmFtczogYW55LFxuICAgIHVzZXI6IHtcbiAgICAgIGlkOiBzdHJpbmdcbiAgICAgIGVtYWlsOiBzdHJpbmdcbiAgICAgIG5hbWU6IHN0cmluZ1xuICAgICAgcm9sZTogc3RyaW5nXG4gICAgICBzcGVjaWFsaXR5Pzogc3RyaW5nXG4gICAgICBjcm1OdW1iZXI/OiBzdHJpbmdcbiAgICB9XG4gIH0pOiBQcm9taXNlPE5leHRSZXNwb25zZT4gfCBOZXh0UmVzcG9uc2UgfCBQcm9taXNlPE5leHRSZXNwb25zZSB8IHVuZGVmaW5lZD5cbn1cblxuLyoqXG4gKiBIaWdoZXItT3JkZXIgRnVuY3Rpb24gcGFyYSBwcm90ZWdlciByb3RhcyBBUEkgY29tIGF1dGVudGljYcOnw6NvXG4gKiBcbiAqIEBwYXJhbSBoYW5kbGVyIC0gRnVuw6fDo28gaGFuZGxlciBkYSByb3RhIEFQSVxuICogQHBhcmFtIG9wdGlvbnMgLSBPcMOnw7VlcyBkZSBhdXRlbnRpY2HDp8OjbyAocm9sZXMgbmVjZXNzw6FyaWFzKVxuICogQHJldHVybnMgRnVuw6fDo28gaGFuZGxlciBwcm90ZWdpZGFcbiAqIFxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGV4cG9ydCBjb25zdCBHRVQgPSB3aXRoQXV0aChhc3luYyAocmVxdWVzdCwgeyB1c2VyIH0pID0+IHtcbiAqICAgLy8gdXNlciBqw6EgZXN0w6EgYXV0ZW50aWNhZG8gZSB2YWxpZGFkb1xuICogICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBtZXNzYWdlOiBgT2zDoSAke3VzZXIubmFtZX1gIH0pXG4gKiB9KVxuICogXG4gKiBleHBvcnQgY29uc3QgUE9TVCA9IHdpdGhBdXRoKGFzeW5jIChyZXF1ZXN0LCB7IHVzZXIsIHBhcmFtcyB9KSA9PiB7XG4gKiAgIC8vIEFwZW5hcyBtw6lkaWNvcyBwb2RlbSBhY2Vzc2FyXG4gKiAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuICogICAvLyAuLi4gbMOzZ2ljYSBkYSBBUElcbiAqIH0sIHsgcmVxdWlyZVJvbGU6IFsnRE9DVE9SJywgJ0FETUlOJ10gfSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gd2l0aEF1dGgoXG4gIGhhbmRsZXI6IEF1dGhlbnRpY2F0ZWRBcGlIYW5kbGVyLFxuICBvcHRpb25zOiB7IHJlcXVpcmVSb2xlPzogc3RyaW5nW10gfSA9IHt9XG4pIHtcbiAgcmV0dXJuIGFzeW5jIChyZXF1ZXN0OiBOZXh0UmVxdWVzdCwgY29udGV4dDogeyBwYXJhbXM/OiBhbnkgfSA9IHt9KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIEV4ZWN1dGFyIG1pZGRsZXdhcmUgZGUgYXV0ZW50aWNhw6fDo29cbiAgICAgIGNvbnN0IGF1dGhSZXN1bHQgPSBhd2FpdCBhdXRoTWlkZGxld2FyZShyZXF1ZXN0LCBvcHRpb25zKVxuXG4gICAgICAvLyBTZSBmYWxob3UgbmEgYXV0ZW50aWNhw6fDo28sIHJldG9ybmFyIGVycm9cbiAgICAgIGlmICghYXV0aFJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgIHJldHVybiBhdXRoUmVzdWx0LnJlc3BvbnNlIVxuICAgICAgfVxuXG4gICAgICAvLyBDaGFtYXIgaGFuZGxlciBvcmlnaW5hbCBjb20gdXN1w6FyaW8gYXV0ZW50aWNhZG9cbiAgICAgIHJldHVybiBhd2FpdCBoYW5kbGVyKHJlcXVlc3QsIHtcbiAgICAgICAgcGFyYW1zOiBjb250ZXh0LnBhcmFtcyB8fCB7fSxcbiAgICAgICAgdXNlcjogYXV0aFJlc3VsdC51c2VyIVxuICAgICAgfSlcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvIG5vIHdyYXBwZXIgd2l0aEF1dGg6JywgZXJyb3IpXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgXG4gICAgICAgICAgZXJyb3I6ICdFcnJvIGludGVybm8gZG8gc2Vydmlkb3InLFxuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFZhcmlhw6fDo28gZG8gd2l0aEF1dGggYXBlbmFzIHBhcmEgbcOpZGljb3NcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhEb2N0b3JBdXRoKGhhbmRsZXI6IEF1dGhlbnRpY2F0ZWRBcGlIYW5kbGVyKSB7XG4gIHJldHVybiB3aXRoQXV0aChoYW5kbGVyLCB7IHJlcXVpcmVSb2xlOiBbJ0RPQ1RPUicsICdBRE1JTiddIH0pXG59XG5cbi8qKlxuICogVmFyaWHDp8OjbyBkbyB3aXRoQXV0aCBhcGVuYXMgcGFyYSBhZG1pbmlzdHJhZG9yZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhBZG1pbkF1dGgoaGFuZGxlcjogQXV0aGVudGljYXRlZEFwaUhhbmRsZXIpIHtcbiAgcmV0dXJuIHdpdGhBdXRoKGhhbmRsZXIsIHsgcmVxdWlyZVJvbGU6IFsnQURNSU4nXSB9KVxufVxuXG4vKipcbiAqIEhlbHBlciBwYXJhIHZhbGlkYXIgZGFkb3MgZGUgZW50cmFkYSBkYSBBUElcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZhbGlkYXRlUmVxdWVzdEJvZHk8VD4oXG4gIHJlcXVlc3Q6IE5leHRSZXF1ZXN0LFxuICB2YWxpZGF0b3I6IChkYXRhOiBhbnkpID0+IHsgc3VjY2VzczogYm9vbGVhbjsgZGF0YT86IFQ7IGVycm9ycz86IHN0cmluZ1tdIH1cbik6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBkYXRhPzogVDsgZXJyb3JzPzogc3RyaW5nW107IHJlc3BvbnNlPzogTmV4dFJlc3BvbnNlIH0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKClcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gdmFsaWRhdG9yKGJvZHkpXG4gICAgXG4gICAgaWYgKCF2YWxpZGF0aW9uLnN1Y2Nlc3MpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcnM6IHZhbGlkYXRpb24uZXJyb3JzLFxuICAgICAgICByZXNwb25zZTogTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgeyBcbiAgICAgICAgICAgIGVycm9yOiAnRGFkb3MgaW52w6FsaWRvcycsXG4gICAgICAgICAgICBkZXRhaWxzOiB2YWxpZGF0aW9uLmVycm9ycyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogdmFsaWRhdGlvbi5kYXRhXG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3JzOiBbJ0Zvcm1hdG8gSlNPTiBpbnbDoWxpZG8nXSxcbiAgICAgIHJlc3BvbnNlOiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ0Zvcm1hdG8gSlNPTiBpbnbDoWxpZG8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImF1dGhNaWRkbGV3YXJlIiwid2l0aEF1dGgiLCJoYW5kbGVyIiwib3B0aW9ucyIsInJlcXVlc3QiLCJjb250ZXh0IiwiYXV0aFJlc3VsdCIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsInBhcmFtcyIsInVzZXIiLCJlcnJvciIsImNvbnNvbGUiLCJqc29uIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3RhdHVzIiwid2l0aERvY3RvckF1dGgiLCJyZXF1aXJlUm9sZSIsIndpdGhBZG1pbkF1dGgiLCJ2YWxpZGF0ZVJlcXVlc3RCb2R5IiwidmFsaWRhdG9yIiwiYm9keSIsInZhbGlkYXRpb24iLCJlcnJvcnMiLCJkZXRhaWxzIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/with-auth.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/uuid","vendor-chunks/@panva"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();