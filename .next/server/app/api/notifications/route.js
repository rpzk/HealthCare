"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/notifications/route";
exports.ids = ["app/api/notifications/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _workspaces_HealthCare_app_api_notifications_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/notifications/route.ts */ \"(rsc)/./app/api/notifications/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/notifications/route\",\n        pathname: \"/api/notifications\",\n        filename: \"route\",\n        bundlePath: \"app/api/notifications/route\"\n    },\n    resolvedPagePath: \"/workspaces/HealthCare/app/api/notifications/route.ts\",\n    nextConfigOutput,\n    userland: _workspaces_HealthCare_app_api_notifications_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/notifications/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZub3RpZmljYXRpb25zJTJGcm91dGUmcGFnZT0lMkZhcGklMkZub3RpZmljYXRpb25zJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbm90aWZpY2F0aW9ucyUyRnJvdXRlLnRzJmFwcERpcj0lMkZ3b3Jrc3BhY2VzJTJGSGVhbHRoQ2FyZSUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGd29ya3NwYWNlcyUyRkhlYWx0aENhcmUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ0s7QUFDbEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLW1lZGljYWwtcmVjb3Jkcy8/MmMxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvd29ya3NwYWNlcy9IZWFsdGhDYXJlL2FwcC9hcGkvbm90aWZpY2F0aW9ucy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbm90aWZpY2F0aW9ucy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL25vdGlmaWNhdGlvbnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL25vdGlmaWNhdGlvbnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvd29ya3NwYWNlcy9IZWFsdGhDYXJlL2FwcC9hcGkvbm90aWZpY2F0aW9ucy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbm90aWZpY2F0aW9ucy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/notifications/route.ts":
/*!****************************************!*\
  !*** ./app/api/notifications/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_with_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/with-auth */ \"(rsc)/./lib/with-auth.ts\");\n/* harmony import */ var _lib_validation_schemas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/validation-schemas */ \"(rsc)/./lib/validation-schemas.ts\");\n/* harmony import */ var _lib_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/notification-service */ \"(rsc)/./lib/notification-service.ts\");\n/* harmony import */ var _lib_audit_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/audit-logger */ \"(rsc)/./lib/audit-logger.ts\");\n\n\n\n\n\n// GET - Buscar notificações do usuário\nconst GET = (0,_lib_with_auth__WEBPACK_IMPORTED_MODULE_1__.withAuth)(async (request, { user })=>{\n    const { searchParams } = new URL(request.url);\n    const unreadOnly = searchParams.get(\"unreadOnly\") === \"true\";\n    const limit = searchParams.get(\"limit\") ? parseInt(searchParams.get(\"limit\")) : undefined;\n    const priority = searchParams.get(\"priority\");\n    const type = searchParams.get(\"type\");\n    const notifications = await _lib_notification_service__WEBPACK_IMPORTED_MODULE_3__.NotificationService.getUserNotifications(user.id, {\n        unreadOnly,\n        limit,\n        priority,\n        type\n    });\n    _lib_audit_logger__WEBPACK_IMPORTED_MODULE_4__.auditLogger.logSuccess(user.id, user.email, user.role, _lib_audit_logger__WEBPACK_IMPORTED_MODULE_4__.AuditAction.NOTIFICATION_READ, \"notifications\", {\n        count: notifications.length,\n        filters: {\n            unreadOnly,\n            priority,\n            type\n        }\n    });\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(notifications);\n});\n// POST - Criar nova notificação\nconst POST = (0,_lib_with_auth__WEBPACK_IMPORTED_MODULE_1__.withAuth)(async (request, { user })=>{\n    const validation = await (0,_lib_with_auth__WEBPACK_IMPORTED_MODULE_1__.validateRequestBody)(request, _lib_validation_schemas__WEBPACK_IMPORTED_MODULE_2__.validateNotification);\n    if (!validation.success) {\n        return validation.response;\n    }\n    const data = validation.data;\n    const notification = await _lib_notification_service__WEBPACK_IMPORTED_MODULE_3__.NotificationService.createNotification({\n        type: data.type,\n        priority: data.priority,\n        title: data.title,\n        message: data.message,\n        userId: user.id,\n        patientId: data.patientId,\n        consultationId: data.consultationId,\n        metadata: data.metadata\n    });\n    _lib_audit_logger__WEBPACK_IMPORTED_MODULE_4__.auditLogger.logSuccess(user.id, user.email, user.role, _lib_audit_logger__WEBPACK_IMPORTED_MODULE_4__.AuditAction.NOTIFICATION_CREATE, \"notifications\", {\n        notificationId: notification.id,\n        type: data.type,\n        priority: data.priority\n    });\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(notification, {\n        status: 201\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL25vdGlmaWNhdGlvbnMvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF1RDtBQUNRO0FBQ0E7QUFDQztBQUNIO0FBRTdELHVDQUF1QztBQUNoQyxNQUFNTyxNQUFNTix3REFBUUEsQ0FBQyxPQUFPTyxTQUFTLEVBQUVDLElBQUksRUFBRTtJQUNsRCxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlILFFBQVFJLEdBQUc7SUFDNUMsTUFBTUMsYUFBYUgsYUFBYUksR0FBRyxDQUFDLGtCQUFrQjtJQUN0RCxNQUFNQyxRQUFRTCxhQUFhSSxHQUFHLENBQUMsV0FBV0UsU0FBU04sYUFBYUksR0FBRyxDQUFDLFlBQWFHO0lBQ2pGLE1BQU1DLFdBQVdSLGFBQWFJLEdBQUcsQ0FBQztJQUNsQyxNQUFNSyxPQUFPVCxhQUFhSSxHQUFHLENBQUM7SUFFOUIsTUFBTU0sZ0JBQWdCLE1BQU1oQiwwRUFBbUJBLENBQUNpQixvQkFBb0IsQ0FDbEVaLEtBQUthLEVBQUUsRUFDUDtRQUFFVDtRQUFZRTtRQUFPRztRQUFVQztJQUFLO0lBR3RDZCwwREFBV0EsQ0FBQ2tCLFVBQVUsQ0FDcEJkLEtBQUthLEVBQUUsRUFDUGIsS0FBS2UsS0FBSyxFQUNWZixLQUFLZ0IsSUFBSSxFQUNUbkIsMERBQVdBLENBQUNvQixpQkFBaUIsRUFDN0IsaUJBQ0E7UUFBRUMsT0FBT1AsY0FBY1EsTUFBTTtRQUFFQyxTQUFTO1lBQUVoQjtZQUFZSztZQUFVQztRQUFLO0lBQUU7SUFHekUsT0FBT25CLHFEQUFZQSxDQUFDOEIsSUFBSSxDQUFDVjtBQUMzQixHQUFFO0FBRUYsZ0NBQWdDO0FBQ3pCLE1BQU1XLE9BQU85Qix3REFBUUEsQ0FBQyxPQUFPTyxTQUFTLEVBQUVDLElBQUksRUFBRTtJQUNuRCxNQUFNdUIsYUFBYSxNQUFNOUIsbUVBQW1CQSxDQUFDTSxTQUFTTCx5RUFBb0JBO0lBQzFFLElBQUksQ0FBQzZCLFdBQVdDLE9BQU8sRUFBRTtRQUN2QixPQUFPRCxXQUFXRSxRQUFRO0lBQzVCO0lBRUEsTUFBTUMsT0FBT0gsV0FBV0csSUFBSTtJQUU1QixNQUFNQyxlQUFlLE1BQU1oQywwRUFBbUJBLENBQUNpQyxrQkFBa0IsQ0FBQztRQUNoRWxCLE1BQU1nQixLQUFLaEIsSUFBSTtRQUNmRCxVQUFVaUIsS0FBS2pCLFFBQVE7UUFDdkJvQixPQUFPSCxLQUFLRyxLQUFLO1FBQ2pCQyxTQUFTSixLQUFLSSxPQUFPO1FBQ3JCQyxRQUFRL0IsS0FBS2EsRUFBRTtRQUNmbUIsV0FBV04sS0FBS00sU0FBUztRQUN6QkMsZ0JBQWdCUCxLQUFLTyxjQUFjO1FBQ25DQyxVQUFVUixLQUFLUSxRQUFRO0lBQ3pCO0lBRUF0QywwREFBV0EsQ0FBQ2tCLFVBQVUsQ0FDcEJkLEtBQUthLEVBQUUsRUFDUGIsS0FBS2UsS0FBSyxFQUNWZixLQUFLZ0IsSUFBSSxFQUNUbkIsMERBQVdBLENBQUNzQyxtQkFBbUIsRUFDL0IsaUJBQ0E7UUFBRUMsZ0JBQWdCVCxhQUFhZCxFQUFFO1FBQUVILE1BQU1nQixLQUFLaEIsSUFBSTtRQUFFRCxVQUFVaUIsS0FBS2pCLFFBQVE7SUFBQztJQUc5RSxPQUFPbEIscURBQVlBLENBQUM4QixJQUFJLENBQUNNLGNBQWM7UUFBRVUsUUFBUTtJQUFJO0FBQ3ZELEdBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLW1lZGljYWwtcmVjb3Jkcy8uL2FwcC9hcGkvbm90aWZpY2F0aW9ucy9yb3V0ZS50cz84ZTBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IHdpdGhBdXRoLCB2YWxpZGF0ZVJlcXVlc3RCb2R5IH0gZnJvbSAnQC9saWIvd2l0aC1hdXRoJ1xuaW1wb3J0IHsgdmFsaWRhdGVOb3RpZmljYXRpb24gfSBmcm9tICdAL2xpYi92YWxpZGF0aW9uLXNjaGVtYXMnXG5pbXBvcnQgeyBOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnQC9saWIvbm90aWZpY2F0aW9uLXNlcnZpY2UnXG5pbXBvcnQgeyBhdWRpdExvZ2dlciwgQXVkaXRBY3Rpb24gfSBmcm9tICdAL2xpYi9hdWRpdC1sb2dnZXInXG5cbi8vIEdFVCAtIEJ1c2NhciBub3RpZmljYcOnw7VlcyBkbyB1c3XDoXJpb1xuZXhwb3J0IGNvbnN0IEdFVCA9IHdpdGhBdXRoKGFzeW5jIChyZXF1ZXN0LCB7IHVzZXIgfSkgPT4ge1xuICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXF1ZXN0LnVybClcbiAgY29uc3QgdW5yZWFkT25seSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3VucmVhZE9ubHknKSA9PT0gJ3RydWUnXG4gIGNvbnN0IGxpbWl0ID0gc2VhcmNoUGFyYW1zLmdldCgnbGltaXQnKSA/IHBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoJ2xpbWl0JykhKSA6IHVuZGVmaW5lZFxuICBjb25zdCBwcmlvcml0eSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3ByaW9yaXR5JykgYXMgYW55XG4gIGNvbnN0IHR5cGUgPSBzZWFyY2hQYXJhbXMuZ2V0KCd0eXBlJykgYXMgYW55XG5cbiAgY29uc3Qgbm90aWZpY2F0aW9ucyA9IGF3YWl0IE5vdGlmaWNhdGlvblNlcnZpY2UuZ2V0VXNlck5vdGlmaWNhdGlvbnMoXG4gICAgdXNlci5pZCxcbiAgICB7IHVucmVhZE9ubHksIGxpbWl0LCBwcmlvcml0eSwgdHlwZSB9XG4gIClcblxuICBhdWRpdExvZ2dlci5sb2dTdWNjZXNzKFxuICAgIHVzZXIuaWQsXG4gICAgdXNlci5lbWFpbCxcbiAgICB1c2VyLnJvbGUsXG4gICAgQXVkaXRBY3Rpb24uTk9USUZJQ0FUSU9OX1JFQUQsXG4gICAgJ25vdGlmaWNhdGlvbnMnLFxuICAgIHsgY291bnQ6IG5vdGlmaWNhdGlvbnMubGVuZ3RoLCBmaWx0ZXJzOiB7IHVucmVhZE9ubHksIHByaW9yaXR5LCB0eXBlIH0gfVxuICApXG5cbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKG5vdGlmaWNhdGlvbnMpXG59KVxuXG4vLyBQT1NUIC0gQ3JpYXIgbm92YSBub3RpZmljYcOnw6NvXG5leHBvcnQgY29uc3QgUE9TVCA9IHdpdGhBdXRoKGFzeW5jIChyZXF1ZXN0LCB7IHVzZXIgfSkgPT4ge1xuICBjb25zdCB2YWxpZGF0aW9uID0gYXdhaXQgdmFsaWRhdGVSZXF1ZXN0Qm9keShyZXF1ZXN0LCB2YWxpZGF0ZU5vdGlmaWNhdGlvbilcbiAgaWYgKCF2YWxpZGF0aW9uLnN1Y2Nlc3MpIHtcbiAgICByZXR1cm4gdmFsaWRhdGlvbi5yZXNwb25zZSFcbiAgfVxuXG4gIGNvbnN0IGRhdGEgPSB2YWxpZGF0aW9uLmRhdGEhXG5cbiAgY29uc3Qgbm90aWZpY2F0aW9uID0gYXdhaXQgTm90aWZpY2F0aW9uU2VydmljZS5jcmVhdGVOb3RpZmljYXRpb24oe1xuICAgIHR5cGU6IGRhdGEudHlwZSxcbiAgICBwcmlvcml0eTogZGF0YS5wcmlvcml0eSxcbiAgICB0aXRsZTogZGF0YS50aXRsZSxcbiAgICBtZXNzYWdlOiBkYXRhLm1lc3NhZ2UsXG4gICAgdXNlcklkOiB1c2VyLmlkLFxuICAgIHBhdGllbnRJZDogZGF0YS5wYXRpZW50SWQsXG4gICAgY29uc3VsdGF0aW9uSWQ6IGRhdGEuY29uc3VsdGF0aW9uSWQsXG4gICAgbWV0YWRhdGE6IGRhdGEubWV0YWRhdGFcbiAgfSlcblxuICBhdWRpdExvZ2dlci5sb2dTdWNjZXNzKFxuICAgIHVzZXIuaWQsXG4gICAgdXNlci5lbWFpbCxcbiAgICB1c2VyLnJvbGUsXG4gICAgQXVkaXRBY3Rpb24uTk9USUZJQ0FUSU9OX0NSRUFURSxcbiAgICAnbm90aWZpY2F0aW9ucycsXG4gICAgeyBub3RpZmljYXRpb25JZDogbm90aWZpY2F0aW9uLmlkLCB0eXBlOiBkYXRhLnR5cGUsIHByaW9yaXR5OiBkYXRhLnByaW9yaXR5IH1cbiAgKVxuXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihub3RpZmljYXRpb24sIHsgc3RhdHVzOiAyMDEgfSlcbn0pXG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwid2l0aEF1dGgiLCJ2YWxpZGF0ZVJlcXVlc3RCb2R5IiwidmFsaWRhdGVOb3RpZmljYXRpb24iLCJOb3RpZmljYXRpb25TZXJ2aWNlIiwiYXVkaXRMb2dnZXIiLCJBdWRpdEFjdGlvbiIsIkdFVCIsInJlcXVlc3QiLCJ1c2VyIiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwidW5yZWFkT25seSIsImdldCIsImxpbWl0IiwicGFyc2VJbnQiLCJ1bmRlZmluZWQiLCJwcmlvcml0eSIsInR5cGUiLCJub3RpZmljYXRpb25zIiwiZ2V0VXNlck5vdGlmaWNhdGlvbnMiLCJpZCIsImxvZ1N1Y2Nlc3MiLCJlbWFpbCIsInJvbGUiLCJOT1RJRklDQVRJT05fUkVBRCIsImNvdW50IiwibGVuZ3RoIiwiZmlsdGVycyIsImpzb24iLCJQT1NUIiwidmFsaWRhdGlvbiIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsImRhdGEiLCJub3RpZmljYXRpb24iLCJjcmVhdGVOb3RpZmljYXRpb24iLCJ0aXRsZSIsIm1lc3NhZ2UiLCJ1c2VySWQiLCJwYXRpZW50SWQiLCJjb25zdWx0YXRpb25JZCIsIm1ldGFkYXRhIiwiTk9USUZJQ0FUSU9OX0NSRUFURSIsIm5vdGlmaWNhdGlvbklkIiwic3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/notifications/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/audit-logger.ts":
/*!*****************************!*\
  !*** ./lib/audit-logger.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuditAction: () => (/* binding */ AuditAction),\n/* harmony export */   auditLogger: () => (/* binding */ auditLogger),\n/* harmony export */   getRequestInfo: () => (/* binding */ getRequestInfo)\n/* harmony export */ });\n/**\n * Sistema de Logs de Auditoria para HealthCare\n * Registra ações críticas no sistema para compliance e segurança\n */ var AuditAction;\n(function(AuditAction) {\n    // Autenticação\n    AuditAction[\"LOGIN\"] = \"LOGIN\";\n    AuditAction[\"LOGOUT\"] = \"LOGOUT\";\n    AuditAction[\"LOGIN_FAILED\"] = \"LOGIN_FAILED\";\n    // Pacientes\n    AuditAction[\"PATIENT_CREATE\"] = \"PATIENT_CREATE\";\n    AuditAction[\"PATIENT_READ\"] = \"PATIENT_READ\";\n    AuditAction[\"PATIENT_UPDATE\"] = \"PATIENT_UPDATE\";\n    AuditAction[\"PATIENT_DELETE\"] = \"PATIENT_DELETE\";\n    // Consultas\n    AuditAction[\"CONSULTATION_CREATE\"] = \"CONSULTATION_CREATE\";\n    AuditAction[\"CONSULTATION_READ\"] = \"CONSULTATION_READ\";\n    AuditAction[\"CONSULTATION_UPDATE\"] = \"CONSULTATION_UPDATE\";\n    AuditAction[\"CONSULTATION_DELETE\"] = \"CONSULTATION_DELETE\";\n    // Notificações\n    AuditAction[\"NOTIFICATION_CREATE\"] = \"NOTIFICATION_CREATE\";\n    AuditAction[\"NOTIFICATION_READ\"] = \"NOTIFICATION_READ\";\n    AuditAction[\"NOTIFICATION_UPDATE\"] = \"NOTIFICATION_UPDATE\";\n    AuditAction[\"NOTIFICATION_DELETE\"] = \"NOTIFICATION_DELETE\";\n    // Prescrições\n    AuditAction[\"PRESCRIPTION_CREATE\"] = \"PRESCRIPTION_CREATE\";\n    AuditAction[\"PRESCRIPTION_READ\"] = \"PRESCRIPTION_READ\";\n    AuditAction[\"PRESCRIPTION_UPDATE\"] = \"PRESCRIPTION_UPDATE\";\n    // Registros Médicos\n    AuditAction[\"MEDICAL_RECORD_CREATE\"] = \"MEDICAL_RECORD_CREATE\";\n    AuditAction[\"MEDICAL_RECORD_READ\"] = \"MEDICAL_RECORD_READ\";\n    AuditAction[\"MEDICAL_RECORD_UPDATE\"] = \"MEDICAL_RECORD_UPDATE\";\n    // IA\n    AuditAction[\"AI_INTERACTION\"] = \"AI_INTERACTION\";\n    AuditAction[\"AI_ANALYSIS\"] = \"AI_ANALYSIS\";\n    // Sistema\n    AuditAction[\"SYSTEM_CONFIG_CHANGE\"] = \"SYSTEM_CONFIG_CHANGE\";\n    AuditAction[\"DATA_EXPORT\"] = \"DATA_EXPORT\";\n    AuditAction[\"DATA_IMPORT\"] = \"DATA_IMPORT\";\n    // Segurança e Anomalias\n    AuditAction[\"RATE_LIMIT_EXCEEDED\"] = \"RATE_LIMIT_EXCEEDED\";\n    AuditAction[\"CRITICAL_ANOMALY_DETECTED\"] = \"CRITICAL_ANOMALY_DETECTED\";\n    AuditAction[\"ANOMALY_DETECTED\"] = \"ANOMALY_DETECTED\";\n    AuditAction[\"API_ERROR\"] = \"API_ERROR\";\n    AuditAction[\"SECURITY_INCIDENT\"] = \"SECURITY_INCIDENT\";\n})(AuditAction || (AuditAction = {}));\nclass AuditLogger {\n    constructor(){\n        this.logs = [];\n    }\n    static getInstance() {\n        if (!AuditLogger.instance) {\n            AuditLogger.instance = new AuditLogger();\n        }\n        return AuditLogger.instance;\n    }\n    /**\n   * Registra uma ação de auditoria\n   */ log(userId, userEmail, userRole, action, resource, options = {}) {\n        const auditLog = {\n            userId,\n            userEmail,\n            userRole,\n            action,\n            resource,\n            resourceId: options.resourceId,\n            details: options.details,\n            ipAddress: options.ipAddress,\n            userAgent: options.userAgent,\n            timestamp: new Date(),\n            success: options.success ?? true,\n            errorMessage: options.errorMessage\n        };\n        // Em desenvolvimento, apenas log no console\n        if (true) {\n            console.log(\"\\uD83D\\uDD0D AUDIT LOG:\", {\n                user: `${userEmail} (${userRole})`,\n                action: action,\n                resource: resource,\n                success: auditLog.success,\n                timestamp: auditLog.timestamp.toISOString()\n            });\n        }\n        // TODO: Em produção, salvar no banco de dados\n        // TODO: Implementar rotação de logs\n        // TODO: Enviar logs críticos para sistema de monitoramento\n        this.logs.push(auditLog);\n        // Manter apenas os últimos 1000 logs em memória\n        if (this.logs.length > 1000) {\n            this.logs = this.logs.slice(-1000);\n        }\n    }\n    /**\n   * Log de sucesso\n   */ logSuccess(userId, userEmail, userRole, action, resource, details) {\n        this.log(userId, userEmail, userRole, action, resource, {\n            details,\n            success: true\n        });\n    }\n    /**\n   * Log de erro/falha\n   */ logError(userId, userEmail, userRole, action, resource, errorMessage, details) {\n        this.log(userId, userEmail, userRole, action, resource, {\n            details,\n            success: false,\n            errorMessage\n        });\n    }\n    /**\n   * Obter logs recentes (para debug)\n   */ getRecentLogs(limit = 50) {\n        return this.logs.sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime()).slice(0, limit);\n    }\n    /**\n   * Filtrar logs por usuário\n   */ getLogsByUser(userId, limit = 50) {\n        return this.logs.filter((log)=>log.userId === userId).sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime()).slice(0, limit);\n    }\n    /**\n   * Filtrar logs por ação\n   */ getLogsByAction(action, limit = 50) {\n        return this.logs.filter((log)=>log.action === action).sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime()).slice(0, limit);\n    }\n}\n// Export singleton instance\nconst auditLogger = AuditLogger.getInstance();\n/**\n * Helper para extrair informações da requisição\n */ function getRequestInfo(request) {\n    const forwarded = request.headers.get(\"x-forwarded-for\");\n    const realIP = request.headers.get(\"x-real-ip\");\n    return {\n        ipAddress: forwarded?.split(\",\")[0] || realIP || \"unknown\",\n        userAgent: request.headers.get(\"user-agent\") || \"unknown\"\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/audit-logger.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth-middleware.ts":
/*!********************************!*\
  !*** ./lib/auth-middleware.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authMiddleware: () => (/* binding */ authMiddleware),\n/* harmony export */   createAuthError: () => (/* binding */ createAuthError),\n/* harmony export */   hasPermission: () => (/* binding */ hasPermission)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/jwt */ \"(rsc)/./node_modules/next-auth/jwt/index.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Middleware para verificar autenticação em rotas API\n * Extrai e valida o token JWT do NextAuth\n */ async function authMiddleware(request, options = {}) {\n    try {\n        // Obter token do NextAuth\n        const token = await (0,next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__.getToken)({\n            req: request,\n            secret: \"healthcare-secret-key-change-in-production-2024\"\n        });\n        if (!token) {\n            return {\n                success: false,\n                error: \"Token de autentica\\xe7\\xe3o n\\xe3o encontrado\",\n                response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"N\\xe3o autorizado - Token n\\xe3o encontrado\"\n                }, {\n                    status: 401\n                })\n            };\n        }\n        // Verificar se o usuário está ativo (se necessário, consultar BD)\n        if (!token.id || !token.email) {\n            return {\n                success: false,\n                error: \"Token inv\\xe1lido - dados do usu\\xe1rio ausentes\",\n                response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Token inv\\xe1lido\"\n                }, {\n                    status: 401\n                })\n            };\n        }\n        // Verificar role se especificado\n        if (options.requireRole && options.requireRole.length > 0) {\n            if (!token.role || !options.requireRole.includes(token.role)) {\n                return {\n                    success: false,\n                    error: `Acesso negado - Role necessária: ${options.requireRole.join(\" ou \")}`,\n                    response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Acesso negado - Permiss\\xf5es insuficientes\"\n                    }, {\n                        status: 403\n                    })\n                };\n            }\n        }\n        // Estruturar dados do usuário\n        const user = {\n            id: token.id,\n            email: token.email,\n            name: token.name,\n            role: token.role,\n            speciality: token.speciality,\n            crmNumber: token.crmNumber\n        };\n        // Log de auditoria (opcional em desenvolvimento)\n        if (true) {\n            console.log(`🔐 Acesso autorizado: ${user.email} (${user.role}) - ${request.method} ${request.url}`);\n        }\n        return {\n            success: true,\n            user\n        };\n    } catch (error) {\n        console.error(\"Erro no middleware de autentica\\xe7\\xe3o:\", error);\n        return {\n            success: false,\n            error: \"Erro interno de autentica\\xe7\\xe3o\",\n            response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Erro interno do servidor\"\n            }, {\n                status: 500\n            })\n        };\n    }\n}\n/**\n * Helper para verificar permissões específicas\n */ function hasPermission(userRole, requiredRoles) {\n    return requiredRoles.includes(userRole);\n}\n/**\n * Helper para criar resposta de erro padrão\n */ function createAuthError(message, status = 401) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: message,\n        timestamp: new Date().toISOString(),\n        success: false\n    }, {\n        status\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aC1taWRkbGV3YXJlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUNmO0FBYXhDOzs7Q0FHQyxHQUNNLGVBQWVFLGVBQ3BCQyxPQUFvQixFQUNwQkMsVUFBc0MsQ0FBQyxDQUFDO0lBRXhDLElBQUk7UUFDRiwwQkFBMEI7UUFDMUIsTUFBTUMsUUFBUSxNQUFNSix1REFBUUEsQ0FBQztZQUMzQkssS0FBS0g7WUFDTEksUUFBUUMsaURBQTJCO1FBQ3JDO1FBRUEsSUFBSSxDQUFDSCxPQUFPO1lBQ1YsT0FBTztnQkFDTE0sU0FBUztnQkFDVEMsT0FBTztnQkFDUEMsVUFBVWIscURBQVlBLENBQUNjLElBQUksQ0FDekI7b0JBQUVGLE9BQU87Z0JBQXdDLEdBQ2pEO29CQUFFRyxRQUFRO2dCQUFJO1lBRWxCO1FBQ0Y7UUFFQSxrRUFBa0U7UUFDbEUsSUFBSSxDQUFDVixNQUFNVyxFQUFFLElBQUksQ0FBQ1gsTUFBTVksS0FBSyxFQUFFO1lBQzdCLE9BQU87Z0JBQ0xOLFNBQVM7Z0JBQ1RDLE9BQU87Z0JBQ1BDLFVBQVViLHFEQUFZQSxDQUFDYyxJQUFJLENBQ3pCO29CQUFFRixPQUFPO2dCQUFpQixHQUMxQjtvQkFBRUcsUUFBUTtnQkFBSTtZQUVsQjtRQUNGO1FBRUEsaUNBQWlDO1FBQ2pDLElBQUlYLFFBQVFjLFdBQVcsSUFBSWQsUUFBUWMsV0FBVyxDQUFDQyxNQUFNLEdBQUcsR0FBRztZQUN6RCxJQUFJLENBQUNkLE1BQU1lLElBQUksSUFBSSxDQUFDaEIsUUFBUWMsV0FBVyxDQUFDRyxRQUFRLENBQUNoQixNQUFNZSxJQUFJLEdBQWE7Z0JBQ3RFLE9BQU87b0JBQ0xULFNBQVM7b0JBQ1RDLE9BQU8sQ0FBQyxpQ0FBaUMsRUFBRVIsUUFBUWMsV0FBVyxDQUFDSSxJQUFJLENBQUMsUUFBUSxDQUFDO29CQUM3RVQsVUFBVWIscURBQVlBLENBQUNjLElBQUksQ0FDekI7d0JBQUVGLE9BQU87b0JBQTJDLEdBQ3BEO3dCQUFFRyxRQUFRO29CQUFJO2dCQUVsQjtZQUNGO1FBQ0Y7UUFFQSw4QkFBOEI7UUFDOUIsTUFBTVEsT0FBTztZQUNYUCxJQUFJWCxNQUFNVyxFQUFFO1lBQ1pDLE9BQU9aLE1BQU1ZLEtBQUs7WUFDbEJPLE1BQU1uQixNQUFNbUIsSUFBSTtZQUNoQkosTUFBTWYsTUFBTWUsSUFBSTtZQUNoQkssWUFBWXBCLE1BQU1vQixVQUFVO1lBQzVCQyxXQUFXckIsTUFBTXFCLFNBQVM7UUFDNUI7UUFFQSxpREFBaUQ7UUFDakQsSUFBSWxCLElBQXlCLEVBQWU7WUFDMUNtQixRQUFRQyxHQUFHLENBQUMsQ0FBQyxzQkFBc0IsRUFBRUwsS0FBS04sS0FBSyxDQUFDLEVBQUUsRUFBRU0sS0FBS0gsSUFBSSxDQUFDLElBQUksRUFBRWpCLFFBQVEwQixNQUFNLENBQUMsQ0FBQyxFQUFFMUIsUUFBUTJCLEdBQUcsQ0FBQyxDQUFDO1FBQ3JHO1FBRUEsT0FBTztZQUNMbkIsU0FBUztZQUNUWTtRQUNGO0lBRUYsRUFBRSxPQUFPWCxPQUFPO1FBQ2RlLFFBQVFmLEtBQUssQ0FBQyw2Q0FBdUNBO1FBQ3JELE9BQU87WUFDTEQsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFVBQVViLHFEQUFZQSxDQUFDYyxJQUFJLENBQ3pCO2dCQUFFRixPQUFPO1lBQTJCLEdBQ3BDO2dCQUFFRyxRQUFRO1lBQUk7UUFFbEI7SUFDRjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTZ0IsY0FBY0MsUUFBZ0IsRUFBRUMsYUFBdUI7SUFDckUsT0FBT0EsY0FBY1osUUFBUSxDQUFDVztBQUNoQztBQUVBOztDQUVDLEdBQ00sU0FBU0UsZ0JBQWdCQyxPQUFlLEVBQUVwQixTQUFpQixHQUFHO0lBQ25FLE9BQU9mLHFEQUFZQSxDQUFDYyxJQUFJLENBQ3RCO1FBQ0VGLE9BQU91QjtRQUNQQyxXQUFXLElBQUlDLE9BQU9DLFdBQVc7UUFDakMzQixTQUFTO0lBQ1gsR0FDQTtRQUFFSTtJQUFPO0FBRWIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLW1lZGljYWwtcmVjb3Jkcy8uL2xpYi9hdXRoLW1pZGRsZXdhcmUudHM/OGUyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ25leHQtYXV0aC9qd3QnXG5cbmV4cG9ydCBpbnRlcmZhY2UgQXV0aGVudGljYXRlZFJlcXVlc3QgZXh0ZW5kcyBOZXh0UmVxdWVzdCB7XG4gIHVzZXI6IHtcbiAgICBpZDogc3RyaW5nXG4gICAgZW1haWw6IHN0cmluZ1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIHJvbGU6IHN0cmluZ1xuICAgIHNwZWNpYWxpdHk/OiBzdHJpbmdcbiAgICBjcm1OdW1iZXI/OiBzdHJpbmdcbiAgfVxufVxuXG4vKipcbiAqIE1pZGRsZXdhcmUgcGFyYSB2ZXJpZmljYXIgYXV0ZW50aWNhw6fDo28gZW0gcm90YXMgQVBJXG4gKiBFeHRyYWkgZSB2YWxpZGEgbyB0b2tlbiBKV1QgZG8gTmV4dEF1dGhcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dGhNaWRkbGV3YXJlKFxuICByZXF1ZXN0OiBOZXh0UmVxdWVzdCxcbiAgb3B0aW9uczogeyByZXF1aXJlUm9sZT86IHN0cmluZ1tdIH0gPSB7fVxuKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IHVzZXI/OiBhbnk7IGVycm9yPzogc3RyaW5nOyByZXNwb25zZT86IE5leHRSZXNwb25zZSB9PiB7XG4gIHRyeSB7XG4gICAgLy8gT2J0ZXIgdG9rZW4gZG8gTmV4dEF1dGhcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGdldFRva2VuKHsgXG4gICAgICByZXE6IHJlcXVlc3QsXG4gICAgICBzZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCBcbiAgICB9KVxuXG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiAnVG9rZW4gZGUgYXV0ZW50aWNhw6fDo28gbsOjbyBlbmNvbnRyYWRvJyxcbiAgICAgICAgcmVzcG9uc2U6IE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgIHsgZXJyb3I6ICdOw6NvIGF1dG9yaXphZG8gLSBUb2tlbiBuw6NvIGVuY29udHJhZG8nIH0sXG4gICAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgc2UgbyB1c3XDoXJpbyBlc3TDoSBhdGl2byAoc2UgbmVjZXNzw6FyaW8sIGNvbnN1bHRhciBCRClcbiAgICBpZiAoIXRva2VuLmlkIHx8ICF0b2tlbi5lbWFpbCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiAnVG9rZW4gaW52w6FsaWRvIC0gZGFkb3MgZG8gdXN1w6FyaW8gYXVzZW50ZXMnLFxuICAgICAgICByZXNwb25zZTogTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgeyBlcnJvcjogJ1Rva2VuIGludsOhbGlkbycgfSxcbiAgICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFZlcmlmaWNhciByb2xlIHNlIGVzcGVjaWZpY2Fkb1xuICAgIGlmIChvcHRpb25zLnJlcXVpcmVSb2xlICYmIG9wdGlvbnMucmVxdWlyZVJvbGUubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKCF0b2tlbi5yb2xlIHx8ICFvcHRpb25zLnJlcXVpcmVSb2xlLmluY2x1ZGVzKHRva2VuLnJvbGUgYXMgc3RyaW5nKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiBgQWNlc3NvIG5lZ2FkbyAtIFJvbGUgbmVjZXNzw6FyaWE6ICR7b3B0aW9ucy5yZXF1aXJlUm9sZS5qb2luKCcgb3UgJyl9YCxcbiAgICAgICAgICByZXNwb25zZTogTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICB7IGVycm9yOiAnQWNlc3NvIG5lZ2FkbyAtIFBlcm1pc3PDtWVzIGluc3VmaWNpZW50ZXMnIH0sXG4gICAgICAgICAgICB7IHN0YXR1czogNDAzIH1cbiAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFc3RydXR1cmFyIGRhZG9zIGRvIHVzdcOhcmlvXG4gICAgY29uc3QgdXNlciA9IHtcbiAgICAgIGlkOiB0b2tlbi5pZCBhcyBzdHJpbmcsXG4gICAgICBlbWFpbDogdG9rZW4uZW1haWwgYXMgc3RyaW5nLFxuICAgICAgbmFtZTogdG9rZW4ubmFtZSBhcyBzdHJpbmcsXG4gICAgICByb2xlOiB0b2tlbi5yb2xlIGFzIHN0cmluZyxcbiAgICAgIHNwZWNpYWxpdHk6IHRva2VuLnNwZWNpYWxpdHkgYXMgc3RyaW5nIHwgdW5kZWZpbmVkLFxuICAgICAgY3JtTnVtYmVyOiB0b2tlbi5jcm1OdW1iZXIgYXMgc3RyaW5nIHwgdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgLy8gTG9nIGRlIGF1ZGl0b3JpYSAob3BjaW9uYWwgZW0gZGVzZW52b2x2aW1lbnRvKVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgY29uc29sZS5sb2coYPCflJAgQWNlc3NvIGF1dG9yaXphZG86ICR7dXNlci5lbWFpbH0gKCR7dXNlci5yb2xlfSkgLSAke3JlcXVlc3QubWV0aG9kfSAke3JlcXVlc3QudXJsfWApXG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICB1c2VyXG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJybyBubyBtaWRkbGV3YXJlIGRlIGF1dGVudGljYcOnw6NvOicsIGVycm9yKVxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnRXJybyBpbnRlcm5vIGRlIGF1dGVudGljYcOnw6NvJyxcbiAgICAgIHJlc3BvbnNlOiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ0Vycm8gaW50ZXJubyBkbyBzZXJ2aWRvcicgfSxcbiAgICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgICApXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogSGVscGVyIHBhcmEgdmVyaWZpY2FyIHBlcm1pc3PDtWVzIGVzcGVjw61maWNhc1xuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzUGVybWlzc2lvbih1c2VyUm9sZTogc3RyaW5nLCByZXF1aXJlZFJvbGVzOiBzdHJpbmdbXSk6IGJvb2xlYW4ge1xuICByZXR1cm4gcmVxdWlyZWRSb2xlcy5pbmNsdWRlcyh1c2VyUm9sZSlcbn1cblxuLyoqXG4gKiBIZWxwZXIgcGFyYSBjcmlhciByZXNwb3N0YSBkZSBlcnJvIHBhZHLDo29cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUF1dGhFcnJvcihtZXNzYWdlOiBzdHJpbmcsIHN0YXR1czogbnVtYmVyID0gNDAxKTogTmV4dFJlc3BvbnNlIHtcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgIHsgXG4gICAgICBlcnJvcjogbWVzc2FnZSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgc3VjY2VzczogZmFsc2VcbiAgICB9LFxuICAgIHsgc3RhdHVzIH1cbiAgKVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImdldFRva2VuIiwiYXV0aE1pZGRsZXdhcmUiLCJyZXF1ZXN0Iiwib3B0aW9ucyIsInRva2VuIiwicmVxIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIk5FWFRBVVRIX1NFQ1JFVCIsInN1Y2Nlc3MiLCJlcnJvciIsInJlc3BvbnNlIiwianNvbiIsInN0YXR1cyIsImlkIiwiZW1haWwiLCJyZXF1aXJlUm9sZSIsImxlbmd0aCIsInJvbGUiLCJpbmNsdWRlcyIsImpvaW4iLCJ1c2VyIiwibmFtZSIsInNwZWNpYWxpdHkiLCJjcm1OdW1iZXIiLCJjb25zb2xlIiwibG9nIiwibWV0aG9kIiwidXJsIiwiaGFzUGVybWlzc2lvbiIsInVzZXJSb2xlIiwicmVxdWlyZWRSb2xlcyIsImNyZWF0ZUF1dGhFcnJvciIsIm1lc3NhZ2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth-middleware.ts\n");

/***/ }),

/***/ "(rsc)/./lib/notification-service.ts":
/*!*************************************!*\
  !*** ./lib/notification-service.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NotificationService: () => (/* binding */ NotificationService)\n/* harmony export */ });\nclass NotificationService {\n    // Criar nova notificação\n    static async createNotification(data) {\n        try {\n            // Em produção, salvaria no banco de dados\n            const notification = {\n                id: this.generateId(),\n                read: false,\n                createdAt: new Date(),\n                ...data\n            };\n            // Log para desenvolvimento\n            console.log(\"\\uD83D\\uDCE2 Nova notifica\\xe7\\xe3o:\", notification);\n            // Em produção: salvar no banco e enviar via WebSocket/SSE\n            return notification;\n        } catch (error) {\n            console.error(\"Erro ao criar notifica\\xe7\\xe3o:\", error);\n            throw error;\n        }\n    }\n    // Buscar notificações do usuário\n    static async getUserNotifications(userId, options = {}) {\n        try {\n            // Mock data para desenvolvimento\n            const mockNotifications = [\n                {\n                    id: \"1\",\n                    type: \"ai_analysis_complete\",\n                    priority: \"medium\",\n                    title: \"An\\xe1lise de IA Conclu\\xedda\",\n                    message: \"An\\xe1lise de sintomas do paciente Jo\\xe3o Silva foi conclu\\xedda com recomenda\\xe7\\xf5es\",\n                    userId,\n                    patientId: \"patient-1\",\n                    metadata: {\n                        analysisId: \"analysis-123\",\n                        accuracy: 94.5\n                    },\n                    read: false,\n                    createdAt: new Date(Date.now() - 5 * 60 * 1000)\n                },\n                {\n                    id: \"2\",\n                    type: \"critical_alert\",\n                    priority: \"critical\",\n                    title: \"Alerta Cr\\xedtico\",\n                    message: \"Poss\\xedvel intera\\xe7\\xe3o medicamentosa severa detectada para Maria Santos\",\n                    userId,\n                    patientId: \"patient-2\",\n                    metadata: {\n                        drugs: [\n                            \"Warfarin\",\n                            \"Aspirina\"\n                        ],\n                        severity: \"severe\"\n                    },\n                    read: false,\n                    createdAt: new Date(Date.now() - 15 * 60 * 1000)\n                },\n                {\n                    id: \"3\",\n                    type: \"system_status\",\n                    priority: \"low\",\n                    title: \"Sistema Atualizado\",\n                    message: \"Nova vers\\xe3o do sistema de IA m\\xe9dica foi implantada com melhorias\",\n                    userId,\n                    metadata: {\n                        version: \"2.1.0\"\n                    },\n                    read: true,\n                    createdAt: new Date(Date.now() - 60 * 60 * 1000)\n                },\n                {\n                    id: \"4\",\n                    type: \"appointment_reminder\",\n                    priority: \"medium\",\n                    title: \"Consulta em 30 minutos\",\n                    message: \"Consulta com Dr. Carlos Oliveira \\xe0s 14:30\",\n                    userId,\n                    consultationId: \"consultation-1\",\n                    read: false,\n                    createdAt: new Date(Date.now() - 2 * 60 * 1000)\n                }\n            ];\n            let filtered = mockNotifications;\n            if (options.unreadOnly) {\n                filtered = filtered.filter((n)=>!n.read);\n            }\n            if (options.priority) {\n                filtered = filtered.filter((n)=>n.priority === options.priority);\n            }\n            if (options.type) {\n                filtered = filtered.filter((n)=>n.type === options.type);\n            }\n            if (options.limit) {\n                filtered = filtered.slice(0, options.limit);\n            }\n            return filtered.sort((a, b)=>b.createdAt.getTime() - a.createdAt.getTime());\n        } catch (error) {\n            console.error(\"Erro ao buscar notifica\\xe7\\xf5es:\", error);\n            return [];\n        }\n    }\n    // Marcar notificação como lida\n    static async markAsRead(notificationId, userId) {\n        try {\n            // Em produção, atualizaria no banco\n            console.log(`Notificação ${notificationId} marcada como lida para usuário ${userId}`);\n            return true;\n        } catch (error) {\n            console.error(\"Erro ao marcar notifica\\xe7\\xe3o como lida:\", error);\n            return false;\n        }\n    }\n    // Marcar todas as notificações como lidas\n    static async markAllAsRead(userId) {\n        try {\n            console.log(`Todas as notificações do usuário ${userId} marcadas como lidas`);\n            return true;\n        } catch (error) {\n            console.error(\"Erro ao marcar todas as notifica\\xe7\\xf5es como lidas:\", error);\n            return false;\n        }\n    }\n    // Excluir notificação\n    static async deleteNotification(notificationId, userId) {\n        try {\n            console.log(`Notificação ${notificationId} excluída para usuário ${userId}`);\n            return true;\n        } catch (error) {\n            console.error(\"Erro ao excluir notifica\\xe7\\xe3o:\", error);\n            return false;\n        }\n    }\n    // Notificações automáticas para IA\n    static async notifyAIAnalysisComplete(userId, patientName, analysisType, results) {\n        await this.createNotification({\n            type: \"ai_analysis_complete\",\n            priority: \"medium\",\n            title: `Análise ${analysisType} Concluída`,\n            message: `Análise de ${analysisType.toLowerCase()} do paciente ${patientName} foi concluída`,\n            userId,\n            metadata: {\n                analysisType,\n                results\n            }\n        });\n    }\n    static async notifyCriticalAlert(userId, patientName, alertType, details) {\n        await this.createNotification({\n            type: \"critical_alert\",\n            priority: \"critical\",\n            title: \"Alerta Cr\\xedtico\",\n            message: `${alertType} crítico detectado para ${patientName}`,\n            userId,\n            metadata: {\n                alertType,\n                details\n            }\n        });\n    }\n    static async notifyDrugInteraction(userId, patientName, drugs, severity) {\n        const priority = severity === \"severe\" ? \"critical\" : severity === \"moderate\" ? \"high\" : \"medium\";\n        await this.createNotification({\n            type: \"drug_interaction_warning\",\n            priority,\n            title: `Interação Medicamentosa ${severity}`,\n            message: `Interação ${severity.toLowerCase()} detectada em ${patientName}: ${drugs.join(\" + \")}`,\n            userId,\n            metadata: {\n                drugs,\n                severity\n            }\n        });\n    }\n    // Estatísticas de notificações\n    static async getNotificationStats(userId) {\n        const notifications = await this.getUserNotifications(userId);\n        return {\n            total: notifications.length,\n            unread: notifications.filter((n)=>!n.read).length,\n            critical: notifications.filter((n)=>n.priority === \"critical\").length,\n            byType: notifications.reduce((acc, n)=>{\n                acc[n.type] = (acc[n.type] || 0) + 1;\n                return acc;\n            }, {})\n        };\n    }\n    // Utilitários\n    static generateId() {\n        return Math.random().toString(36).substr(2, 9);\n    }\n    static formatTimeAgo(date) {\n        // Garantir que date é um objeto Date válido\n        const dateObj = date instanceof Date ? date : new Date(date);\n        if (isNaN(dateObj.getTime())) {\n            return \"Data inv\\xe1lida\";\n        }\n        const now = new Date();\n        const diffMs = now.getTime() - dateObj.getTime();\n        const diffMins = Math.floor(diffMs / (1000 * 60));\n        const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n        const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n        if (diffMins < 1) return \"Agora mesmo\";\n        if (diffMins < 60) return `${diffMins} min atrás`;\n        if (diffHours < 24) return `${diffHours}h atrás`;\n        return `${diffDays} dias atrás`;\n    }\n    static getPriorityColor(priority) {\n        switch(priority){\n            case \"critical\":\n                return \"text-red-600 bg-red-50 border-red-200\";\n            case \"high\":\n                return \"text-orange-600 bg-orange-50 border-orange-200\";\n            case \"medium\":\n                return \"text-blue-600 bg-blue-50 border-blue-200\";\n            case \"low\":\n                return \"text-gray-600 bg-gray-50 border-gray-200\";\n            default:\n                return \"text-gray-600 bg-gray-50 border-gray-200\";\n        }\n    }\n    static getTypeIcon(type) {\n        switch(type){\n            case \"ai_analysis_complete\":\n                return \"\\uD83E\\uDDE0\";\n            case \"critical_alert\":\n                return \"\\uD83D\\uDEA8\";\n            case \"drug_interaction_warning\":\n                return \"\\uD83D\\uDC8A\";\n            case \"system_status\":\n                return \"⚙️\";\n            case \"appointment_reminder\":\n                return \"\\uD83D\\uDCC5\";\n            case \"patient_update\":\n                return \"\\uD83D\\uDC64\";\n            default:\n                return \"\\uD83D\\uDCE2\";\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/notification-service.ts\n");

/***/ }),

/***/ "(rsc)/./lib/validation-schemas.ts":
/*!***********************************!*\
  !*** ./lib/validation-schemas.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aiInteractionSchema: () => (/* binding */ aiInteractionSchema),\n/* harmony export */   consultationSchema: () => (/* binding */ consultationSchema),\n/* harmony export */   cpfSchema: () => (/* binding */ cpfSchema),\n/* harmony export */   dateSchema: () => (/* binding */ dateSchema),\n/* harmony export */   emailSchema: () => (/* binding */ emailSchema),\n/* harmony export */   medicalRecordSchema: () => (/* binding */ medicalRecordSchema),\n/* harmony export */   patientSchema: () => (/* binding */ patientSchema),\n/* harmony export */   phoneSchema: () => (/* binding */ phoneSchema),\n/* harmony export */   prescriptionSchema: () => (/* binding */ prescriptionSchema),\n/* harmony export */   validateAiInteraction: () => (/* binding */ validateAiInteraction),\n/* harmony export */   validateConsultation: () => (/* binding */ validateConsultation),\n/* harmony export */   validateMedicalRecord: () => (/* binding */ validateMedicalRecord),\n/* harmony export */   validateNotification: () => (/* binding */ validateNotification),\n/* harmony export */   validatePatient: () => (/* binding */ validatePatient),\n/* harmony export */   validatePrescription: () => (/* binding */ validatePrescription),\n/* harmony export */   validateSymptomAnalysis: () => (/* binding */ validateSymptomAnalysis)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/types.js\");\n\n// Esquemas de validação para dados comuns\nconst emailSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().email(\"Email inv\\xe1lido\");\nconst phoneSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().regex(/^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$/, \"Telefone deve estar no formato (11) 99999-9999\");\nconst cpfSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().regex(/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/, \"CPF deve estar no formato XXX.XXX.XXX-XX\");\nconst dateSchema = zod__WEBPACK_IMPORTED_MODULE_0__.string().datetime(\"Data inv\\xe1lida\") || zod__WEBPACK_IMPORTED_MODULE_0__.date();\n// Schema para criação/atualização de paciente\nconst patientSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, \"Nome deve ter pelo menos 2 caracteres\").max(100, \"Nome muito longo\"),\n    email: emailSchema.optional(),\n    cpf: cpfSchema,\n    rg: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(20, \"RG muito longo\").optional(),\n    birthDate: zod__WEBPACK_IMPORTED_MODULE_0__.string().or(zod__WEBPACK_IMPORTED_MODULE_0__.date()),\n    gender: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"MALE\",\n        \"FEMALE\",\n        \"OTHER\"\n    ], {\n        errorMap: ()=>({\n                message: \"G\\xeanero deve ser MALE, FEMALE ou OTHER\"\n            })\n    }),\n    phone: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(20, \"Telefone muito longo\").optional(),\n    address: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(200, \"Endere\\xe7o muito longo\").optional(),\n    city: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, \"Cidade muito longa\").optional(),\n    state: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(2, \"Estado deve ter 2 caracteres\").optional(),\n    zipCode: zod__WEBPACK_IMPORTED_MODULE_0__.string().regex(/^\\d{5}-?\\d{3}$/, \"CEP inv\\xe1lido\").optional(),\n    emergencyContact: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(100, \"Contato de emerg\\xeancia muito longo\").optional(),\n    bloodType: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"A_POSITIVE\",\n        \"A_NEGATIVE\",\n        \"B_POSITIVE\",\n        \"B_NEGATIVE\",\n        \"AB_POSITIVE\",\n        \"AB_NEGATIVE\",\n        \"O_POSITIVE\",\n        \"O_NEGATIVE\"\n    ]).optional(),\n    allergies: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).optional(),\n    chronicDiseases: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).optional(),\n    doctorId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID do m\\xe9dico inv\\xe1lido\")\n});\n// Schema para criação/atualização de consulta\nconst consultationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    patientId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID do paciente inv\\xe1lido\"),\n    doctorId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID do m\\xe9dico inv\\xe1lido\"),\n    scheduledDate: zod__WEBPACK_IMPORTED_MODULE_0__.string().datetime(\"Data da consulta inv\\xe1lida\"),\n    type: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"ROUTINE\",\n        \"EMERGENCY\",\n        \"FOLLOW_UP\",\n        \"INITIAL\"\n    ], {\n        errorMap: ()=>({\n                message: \"Tipo deve ser ROUTINE, EMERGENCY, FOLLOW_UP ou INITIAL\"\n            })\n    }),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(10, \"Descri\\xe7\\xe3o deve ter pelo menos 10 caracteres\").max(1000, \"Descri\\xe7\\xe3o muito longa\"),\n    notes: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(2000, \"Notas muito longas\").optional(),\n    status: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"SCHEDULED\",\n        \"IN_PROGRESS\",\n        \"COMPLETED\",\n        \"CANCELLED\",\n        \"NO_SHOW\"\n    ]).optional().default(\"SCHEDULED\"),\n    duration: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(15, \"Dura\\xe7\\xe3o m\\xednima de 15 minutos\").max(480, \"Dura\\xe7\\xe3o m\\xe1xima de 8 horas\").optional().default(30)\n});\n// Schema para prescrições\nconst prescriptionSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    patientId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID do paciente inv\\xe1lido\"),\n    consultationId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID da consulta inv\\xe1lido\").optional(),\n    medications: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        name: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(2, \"Nome do medicamento deve ter pelo menos 2 caracteres\"),\n        dosage: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"Dosagem \\xe9 obrigat\\xf3ria\"),\n        frequency: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"Frequ\\xeancia \\xe9 obrigat\\xf3ria\"),\n        duration: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"Dura\\xe7\\xe3o \\xe9 obrigat\\xf3ria\"),\n        instructions: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional()\n    })).min(1, \"Pelo menos um medicamento \\xe9 obrigat\\xf3rio\"),\n    observations: zod__WEBPACK_IMPORTED_MODULE_0__.string().max(1000, \"Observa\\xe7\\xf5es muito longas\").optional()\n});\n// Schema para registros médicos\nconst medicalRecordSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    patientId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID do paciente inv\\xe1lido\"),\n    consultationId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID da consulta inv\\xe1lido\").optional(),\n    type: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"ANAMNESIS\",\n        \"PHYSICAL_EXAM\",\n        \"DIAGNOSIS\",\n        \"TREATMENT_PLAN\",\n        \"FOLLOW_UP\"\n    ], {\n        errorMap: ()=>({\n                message: \"Tipo inv\\xe1lido\"\n            })\n    }),\n    content: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(10, \"Conte\\xfado deve ter pelo menos 10 caracteres\").max(5000, \"Conte\\xfado muito longo\"),\n    vitalSigns: zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        temperature: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(30, \"Temperatura muito baixa\").max(45, \"Temperatura muito alta\").optional(),\n        bloodPressure: zod__WEBPACK_IMPORTED_MODULE_0__.object({\n            systolic: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(60, \"Press\\xe3o sist\\xf3lica muito baixa\").max(250, \"Press\\xe3o sist\\xf3lica muito alta\"),\n            diastolic: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(30, \"Press\\xe3o diast\\xf3lica muito baixa\").max(150, \"Press\\xe3o diast\\xf3lica muito alta\")\n        }).optional(),\n        heartRate: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(30, \"Frequ\\xeancia card\\xedaca muito baixa\").max(200, \"Frequ\\xeancia card\\xedaca muito alta\").optional(),\n        weight: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(0.5, \"Peso muito baixo\").max(500, \"Peso muito alto\").optional(),\n        height: zod__WEBPACK_IMPORTED_MODULE_0__.number().min(30, \"Altura muito baixa\").max(250, \"Altura muito alta\").optional()\n    }).optional()\n});\n// Schema para interações de IA\nconst aiInteractionSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    type: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"SYMPTOM_ANALYSIS\",\n        \"DRUG_INTERACTION\",\n        \"MEDICAL_SUMMARY\",\n        \"RECOMMENDATION\"\n    ], {\n        errorMap: ()=>({\n                message: \"Tipo de intera\\xe7\\xe3o IA inv\\xe1lido\"\n            })\n    }),\n    patientId: zod__WEBPACK_IMPORTED_MODULE_0__.string().cuid(\"ID do paciente inv\\xe1lido\").optional(),\n    input: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"Input \\xe9 obrigat\\xf3rio\").max(5000, \"Input muito longo\"),\n    metadata: zod__WEBPACK_IMPORTED_MODULE_0__.record(zod__WEBPACK_IMPORTED_MODULE_0__.any()).optional()\n});\n// Helpers para validação\nfunction validatePatient(data) {\n    const result = patientSchema.safeParse(data);\n    return {\n        success: result.success,\n        data: result.success ? result.data : undefined,\n        errors: result.success ? undefined : result.error.errors.map((e)=>`${e.path.join(\".\")}: ${e.message}`)\n    };\n}\nfunction validateConsultation(data) {\n    const result = consultationSchema.safeParse(data);\n    return {\n        success: result.success,\n        data: result.success ? result.data : undefined,\n        errors: result.success ? undefined : result.error.errors.map((e)=>`${e.path.join(\".\")}: ${e.message}`)\n    };\n}\nfunction validatePrescription(data) {\n    const result = prescriptionSchema.safeParse(data);\n    return {\n        success: result.success,\n        data: result.success ? result.data : undefined,\n        errors: result.success ? undefined : result.error.errors.map((e)=>`${e.path.join(\".\")}: ${e.message}`)\n    };\n}\nfunction validateMedicalRecord(data) {\n    const result = medicalRecordSchema.safeParse(data);\n    return {\n        success: result.success,\n        data: result.success ? result.data : undefined,\n        errors: result.success ? undefined : result.error.errors.map((e)=>`${e.path.join(\".\")}: ${e.message}`)\n    };\n}\nfunction validateAiInteraction(data) {\n    const result = aiInteractionSchema.safeParse(data);\n    return {\n        success: result.success,\n        data: result.success ? result.data : undefined,\n        errors: result.success ? undefined : result.error.errors.map((e)=>`${e.path.join(\".\")}: ${e.message}`)\n    };\n}\n// Schema para notificações\nconst notificationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    type: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"ai_analysis_complete\",\n        \"critical_alert\",\n        \"drug_interaction_warning\",\n        \"system_status\",\n        \"appointment_reminder\",\n        \"patient_update\"\n    ], {\n        errorMap: ()=>({\n                message: \"Tipo inv\\xe1lido para notifica\\xe7\\xe3o\"\n            })\n    }),\n    priority: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"low\",\n        \"medium\",\n        \"high\",\n        \"critical\"\n    ], {\n        errorMap: ()=>({\n                message: \"Prioridade deve ser low, medium, high ou critical\"\n            })\n    }),\n    title: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"T\\xedtulo \\xe9 obrigat\\xf3rio\").max(255, \"T\\xedtulo muito longo\"),\n    message: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"Mensagem \\xe9 obrigat\\xf3ria\").max(2000, \"Mensagem muito longa\"),\n    patientId: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    consultationId: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    metadata: zod__WEBPACK_IMPORTED_MODULE_0__.record(zod__WEBPACK_IMPORTED_MODULE_0__.any()).optional()\n});\nfunction validateNotification(data) {\n    const result = notificationSchema.safeParse(data);\n    return {\n        success: result.success,\n        data: result.success ? result.data : undefined,\n        errors: result.success ? undefined : result.error.errors.map((e)=>`${e.path.join(\".\")}: ${e.message}`)\n    };\n}\n// Schema para análise de sintomas com IA\nconst symptomAnalysisSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    symptoms: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string().min(1, \"Descri\\xe7\\xe3o do sintoma \\xe9 obrigat\\xf3ria\")).min(1, \"Pelo menos um sintoma \\xe9 obrigat\\xf3rio\"),\n    patientAge: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(0, \"Idade inv\\xe1lida\").max(120, \"Idade inv\\xe1lida\"),\n    patientGender: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        \"M\",\n        \"F\"\n    ], {\n        errorMap: ()=>({\n                message: \"G\\xeanero deve ser M ou F\"\n            })\n    }),\n    medicalHistory: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).optional(),\n    currentMedications: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()).optional(),\n    vitalSigns: zod__WEBPACK_IMPORTED_MODULE_0__.object({\n        temperature: zod__WEBPACK_IMPORTED_MODULE_0__.number().optional(),\n        bloodPressure: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n        heartRate: zod__WEBPACK_IMPORTED_MODULE_0__.number().optional(),\n        respiratoryRate: zod__WEBPACK_IMPORTED_MODULE_0__.number().optional()\n    }).optional(),\n    patientId: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional()\n});\nfunction validateSymptomAnalysis(data) {\n    const result = symptomAnalysisSchema.safeParse(data);\n    return {\n        success: result.success,\n        data: result.success ? result.data : undefined,\n        errors: result.success ? undefined : result.error.errors.map((e)=>`${e.path.join(\".\")}: ${e.message}`)\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/validation-schemas.ts\n");

/***/ }),

/***/ "(rsc)/./lib/with-auth.ts":
/*!**************************!*\
  !*** ./lib/with-auth.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateRequestBody: () => (/* binding */ validateRequestBody),\n/* harmony export */   withAdminAuth: () => (/* binding */ withAdminAuth),\n/* harmony export */   withAuth: () => (/* binding */ withAuth),\n/* harmony export */   withDoctorAuth: () => (/* binding */ withDoctorAuth)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _auth_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth-middleware */ \"(rsc)/./lib/auth-middleware.ts\");\n\n\n/**\n * Higher-Order Function para proteger rotas API com autenticação\n * \n * @param handler - Função handler da rota API\n * @param options - Opções de autenticação (roles necessárias)\n * @returns Função handler protegida\n * \n * @example\n * ```typescript\n * export const GET = withAuth(async (request, { user }) => {\n *   // user já está autenticado e validado\n *   return NextResponse.json({ message: `Olá ${user.name}` })\n * })\n * \n * export const POST = withAuth(async (request, { user, params }) => {\n *   // Apenas médicos podem acessar\n *   const data = await request.json()\n *   // ... lógica da API\n * }, { requireRole: ['DOCTOR', 'ADMIN'] })\n * ```\n */ function withAuth(handler, options = {}) {\n    return async (request, context = {})=>{\n        try {\n            // Executar middleware de autenticação\n            const authResult = await (0,_auth_middleware__WEBPACK_IMPORTED_MODULE_1__.authMiddleware)(request, options);\n            // Se falhou na autenticação, retornar erro\n            if (!authResult.success) {\n                return authResult.response;\n            }\n            // Chamar handler original com usuário autenticado\n            return await handler(request, {\n                params: context.params || {},\n                user: authResult.user\n            });\n        } catch (error) {\n            console.error(\"Erro no wrapper withAuth:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Erro interno do servidor\",\n                timestamp: new Date().toISOString(),\n                success: false\n            }, {\n                status: 500\n            });\n        }\n    };\n}\n/**\n * Variação do withAuth apenas para médicos\n */ function withDoctorAuth(handler) {\n    return withAuth(handler, {\n        requireRole: [\n            \"DOCTOR\",\n            \"ADMIN\"\n        ]\n    });\n}\n/**\n * Variação do withAuth apenas para administradores\n */ function withAdminAuth(handler) {\n    return withAuth(handler, {\n        requireRole: [\n            \"ADMIN\"\n        ]\n    });\n}\n/**\n * Helper para validar dados de entrada da API\n */ async function validateRequestBody(request, validator) {\n    try {\n        const body = await request.json();\n        const validation = validator(body);\n        if (!validation.success) {\n            return {\n                success: false,\n                errors: validation.errors,\n                response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Dados inv\\xe1lidos\",\n                    details: validation.errors,\n                    success: false\n                }, {\n                    status: 400\n                })\n            };\n        }\n        return {\n            success: true,\n            data: validation.data\n        };\n    } catch (error) {\n        return {\n            success: false,\n            errors: [\n                \"Formato JSON inv\\xe1lido\"\n            ],\n            response: next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Formato JSON inv\\xe1lido\"\n            }, {\n                status: 400\n            })\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvd2l0aC1hdXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUNMO0FBZ0JsRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQkMsR0FDTSxTQUFTRSxTQUNkQyxPQUFnQyxFQUNoQ0MsVUFBc0MsQ0FBQyxDQUFDO0lBRXhDLE9BQU8sT0FBT0MsU0FBc0JDLFVBQTRCLENBQUMsQ0FBQztRQUNoRSxJQUFJO1lBQ0Ysc0NBQXNDO1lBQ3RDLE1BQU1DLGFBQWEsTUFBTU4sZ0VBQWNBLENBQUNJLFNBQVNEO1lBRWpELDJDQUEyQztZQUMzQyxJQUFJLENBQUNHLFdBQVdDLE9BQU8sRUFBRTtnQkFDdkIsT0FBT0QsV0FBV0UsUUFBUTtZQUM1QjtZQUVBLGtEQUFrRDtZQUNsRCxPQUFPLE1BQU1OLFFBQVFFLFNBQVM7Z0JBQzVCSyxRQUFRSixRQUFRSSxNQUFNLElBQUksQ0FBQztnQkFDM0JDLE1BQU1KLFdBQVdJLElBQUk7WUFDdkI7UUFFRixFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDZCQUE2QkE7WUFDM0MsT0FBT1oscURBQVlBLENBQUNjLElBQUksQ0FDdEI7Z0JBQ0VGLE9BQU87Z0JBQ1BHLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztnQkFDakNULFNBQVM7WUFDWCxHQUNBO2dCQUFFVSxRQUFRO1lBQUk7UUFFbEI7SUFDRjtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTQyxlQUFlaEIsT0FBZ0M7SUFDN0QsT0FBT0QsU0FBU0MsU0FBUztRQUFFaUIsYUFBYTtZQUFDO1lBQVU7U0FBUTtJQUFDO0FBQzlEO0FBRUE7O0NBRUMsR0FDTSxTQUFTQyxjQUFjbEIsT0FBZ0M7SUFDNUQsT0FBT0QsU0FBU0MsU0FBUztRQUFFaUIsYUFBYTtZQUFDO1NBQVE7SUFBQztBQUNwRDtBQUVBOztDQUVDLEdBQ00sZUFBZUUsb0JBQ3BCakIsT0FBb0IsRUFDcEJrQixTQUEyRTtJQUUzRSxJQUFJO1FBQ0YsTUFBTUMsT0FBTyxNQUFNbkIsUUFBUVMsSUFBSTtRQUMvQixNQUFNVyxhQUFhRixVQUFVQztRQUU3QixJQUFJLENBQUNDLFdBQVdqQixPQUFPLEVBQUU7WUFDdkIsT0FBTztnQkFDTEEsU0FBUztnQkFDVGtCLFFBQVFELFdBQVdDLE1BQU07Z0JBQ3pCakIsVUFBVVQscURBQVlBLENBQUNjLElBQUksQ0FDekI7b0JBQ0VGLE9BQU87b0JBQ1BlLFNBQVNGLFdBQVdDLE1BQU07b0JBQzFCbEIsU0FBUztnQkFDWCxHQUNBO29CQUFFVSxRQUFRO2dCQUFJO1lBRWxCO1FBQ0Y7UUFFQSxPQUFPO1lBQ0xWLFNBQVM7WUFDVG9CLE1BQU1ILFdBQVdHLElBQUk7UUFDdkI7SUFFRixFQUFFLE9BQU9oQixPQUFPO1FBQ2QsT0FBTztZQUNMSixTQUFTO1lBQ1RrQixRQUFRO2dCQUFDO2FBQXdCO1lBQ2pDakIsVUFBVVQscURBQVlBLENBQUNjLElBQUksQ0FDekI7Z0JBQUVGLE9BQU87WUFBd0IsR0FDakM7Z0JBQUVNLFFBQVE7WUFBSTtRQUVsQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWFsdGhjYXJlLW1lZGljYWwtcmVjb3Jkcy8uL2xpYi93aXRoLWF1dGgudHM/MWViNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gJy4vYXV0aC1taWRkbGV3YXJlJ1xuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhlbnRpY2F0ZWRBcGlIYW5kbGVyIHtcbiAgKHJlcXVlc3Q6IE5leHRSZXF1ZXN0LCBjb250ZXh0OiB7IFxuICAgIHBhcmFtczogYW55LFxuICAgIHVzZXI6IHtcbiAgICAgIGlkOiBzdHJpbmdcbiAgICAgIGVtYWlsOiBzdHJpbmdcbiAgICAgIG5hbWU6IHN0cmluZ1xuICAgICAgcm9sZTogc3RyaW5nXG4gICAgICBzcGVjaWFsaXR5Pzogc3RyaW5nXG4gICAgICBjcm1OdW1iZXI/OiBzdHJpbmdcbiAgICB9XG4gIH0pOiBQcm9taXNlPE5leHRSZXNwb25zZT4gfCBOZXh0UmVzcG9uc2UgfCBQcm9taXNlPE5leHRSZXNwb25zZSB8IHVuZGVmaW5lZD5cbn1cblxuLyoqXG4gKiBIaWdoZXItT3JkZXIgRnVuY3Rpb24gcGFyYSBwcm90ZWdlciByb3RhcyBBUEkgY29tIGF1dGVudGljYcOnw6NvXG4gKiBcbiAqIEBwYXJhbSBoYW5kbGVyIC0gRnVuw6fDo28gaGFuZGxlciBkYSByb3RhIEFQSVxuICogQHBhcmFtIG9wdGlvbnMgLSBPcMOnw7VlcyBkZSBhdXRlbnRpY2HDp8OjbyAocm9sZXMgbmVjZXNzw6FyaWFzKVxuICogQHJldHVybnMgRnVuw6fDo28gaGFuZGxlciBwcm90ZWdpZGFcbiAqIFxuICogQGV4YW1wbGVcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGV4cG9ydCBjb25zdCBHRVQgPSB3aXRoQXV0aChhc3luYyAocmVxdWVzdCwgeyB1c2VyIH0pID0+IHtcbiAqICAgLy8gdXNlciBqw6EgZXN0w6EgYXV0ZW50aWNhZG8gZSB2YWxpZGFkb1xuICogICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBtZXNzYWdlOiBgT2zDoSAke3VzZXIubmFtZX1gIH0pXG4gKiB9KVxuICogXG4gKiBleHBvcnQgY29uc3QgUE9TVCA9IHdpdGhBdXRoKGFzeW5jIChyZXF1ZXN0LCB7IHVzZXIsIHBhcmFtcyB9KSA9PiB7XG4gKiAgIC8vIEFwZW5hcyBtw6lkaWNvcyBwb2RlbSBhY2Vzc2FyXG4gKiAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKVxuICogICAvLyAuLi4gbMOzZ2ljYSBkYSBBUElcbiAqIH0sIHsgcmVxdWlyZVJvbGU6IFsnRE9DVE9SJywgJ0FETUlOJ10gfSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gd2l0aEF1dGgoXG4gIGhhbmRsZXI6IEF1dGhlbnRpY2F0ZWRBcGlIYW5kbGVyLFxuICBvcHRpb25zOiB7IHJlcXVpcmVSb2xlPzogc3RyaW5nW10gfSA9IHt9XG4pIHtcbiAgcmV0dXJuIGFzeW5jIChyZXF1ZXN0OiBOZXh0UmVxdWVzdCwgY29udGV4dDogeyBwYXJhbXM/OiBhbnkgfSA9IHt9KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIEV4ZWN1dGFyIG1pZGRsZXdhcmUgZGUgYXV0ZW50aWNhw6fDo29cbiAgICAgIGNvbnN0IGF1dGhSZXN1bHQgPSBhd2FpdCBhdXRoTWlkZGxld2FyZShyZXF1ZXN0LCBvcHRpb25zKVxuXG4gICAgICAvLyBTZSBmYWxob3UgbmEgYXV0ZW50aWNhw6fDo28sIHJldG9ybmFyIGVycm9cbiAgICAgIGlmICghYXV0aFJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAgIHJldHVybiBhdXRoUmVzdWx0LnJlc3BvbnNlIVxuICAgICAgfVxuXG4gICAgICAvLyBDaGFtYXIgaGFuZGxlciBvcmlnaW5hbCBjb20gdXN1w6FyaW8gYXV0ZW50aWNhZG9cbiAgICAgIHJldHVybiBhd2FpdCBoYW5kbGVyKHJlcXVlc3QsIHtcbiAgICAgICAgcGFyYW1zOiBjb250ZXh0LnBhcmFtcyB8fCB7fSxcbiAgICAgICAgdXNlcjogYXV0aFJlc3VsdC51c2VyIVxuICAgICAgfSlcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvIG5vIHdyYXBwZXIgd2l0aEF1dGg6JywgZXJyb3IpXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgXG4gICAgICAgICAgZXJyb3I6ICdFcnJvIGludGVybm8gZG8gc2Vydmlkb3InLFxuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFZhcmlhw6fDo28gZG8gd2l0aEF1dGggYXBlbmFzIHBhcmEgbcOpZGljb3NcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhEb2N0b3JBdXRoKGhhbmRsZXI6IEF1dGhlbnRpY2F0ZWRBcGlIYW5kbGVyKSB7XG4gIHJldHVybiB3aXRoQXV0aChoYW5kbGVyLCB7IHJlcXVpcmVSb2xlOiBbJ0RPQ1RPUicsICdBRE1JTiddIH0pXG59XG5cbi8qKlxuICogVmFyaWHDp8OjbyBkbyB3aXRoQXV0aCBhcGVuYXMgcGFyYSBhZG1pbmlzdHJhZG9yZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhBZG1pbkF1dGgoaGFuZGxlcjogQXV0aGVudGljYXRlZEFwaUhhbmRsZXIpIHtcbiAgcmV0dXJuIHdpdGhBdXRoKGhhbmRsZXIsIHsgcmVxdWlyZVJvbGU6IFsnQURNSU4nXSB9KVxufVxuXG4vKipcbiAqIEhlbHBlciBwYXJhIHZhbGlkYXIgZGFkb3MgZGUgZW50cmFkYSBkYSBBUElcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZhbGlkYXRlUmVxdWVzdEJvZHk8VD4oXG4gIHJlcXVlc3Q6IE5leHRSZXF1ZXN0LFxuICB2YWxpZGF0b3I6IChkYXRhOiBhbnkpID0+IHsgc3VjY2VzczogYm9vbGVhbjsgZGF0YT86IFQ7IGVycm9ycz86IHN0cmluZ1tdIH1cbik6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBkYXRhPzogVDsgZXJyb3JzPzogc3RyaW5nW107IHJlc3BvbnNlPzogTmV4dFJlc3BvbnNlIH0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKClcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gdmFsaWRhdG9yKGJvZHkpXG4gICAgXG4gICAgaWYgKCF2YWxpZGF0aW9uLnN1Y2Nlc3MpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcnM6IHZhbGlkYXRpb24uZXJyb3JzLFxuICAgICAgICByZXNwb25zZTogTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgeyBcbiAgICAgICAgICAgIGVycm9yOiAnRGFkb3MgaW52w6FsaWRvcycsXG4gICAgICAgICAgICBkZXRhaWxzOiB2YWxpZGF0aW9uLmVycm9ycyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICAgKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogdmFsaWRhdGlvbi5kYXRhXG4gICAgfVxuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3JzOiBbJ0Zvcm1hdG8gSlNPTiBpbnbDoWxpZG8nXSxcbiAgICAgIHJlc3BvbnNlOiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ0Zvcm1hdG8gSlNPTiBpbnbDoWxpZG8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKVxuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImF1dGhNaWRkbGV3YXJlIiwid2l0aEF1dGgiLCJoYW5kbGVyIiwib3B0aW9ucyIsInJlcXVlc3QiLCJjb250ZXh0IiwiYXV0aFJlc3VsdCIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsInBhcmFtcyIsInVzZXIiLCJlcnJvciIsImNvbnNvbGUiLCJqc29uIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3RhdHVzIiwid2l0aERvY3RvckF1dGgiLCJyZXF1aXJlUm9sZSIsIndpdGhBZG1pbkF1dGgiLCJ2YWxpZGF0ZVJlcXVlc3RCb2R5IiwidmFsaWRhdG9yIiwiYm9keSIsInZhbGlkYXRpb24iLCJlcnJvcnMiLCJkZXRhaWxzIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/with-auth.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/uuid","vendor-chunks/@panva","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2Fworkspaces%2FHealthCare%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2FHealthCare&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();